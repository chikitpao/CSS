##### div: 2
# v_div:  Matrix([[2], [2]])
# v_div_diff:  Matrix([[0], [0]])
# r = M * v_div:  Matrix([[4*c0], [4*c0]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c1], index=0)} len: 1
# Apply rule of "power of two" (#1). Formula: c0 = 2**n // d
n = 2 => c0 = 2

##### div: 3
# v_div:  Matrix([[4], [2], [2]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[4*c0 + 4*c1], [2*c0 + 6*c1], [2*c0 + 6*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 3 => c0 = 4, c1 = 2

##### div: 4
# v_div:  Matrix([[4], [4], [4], [4]])
# v_div_diff:  Matrix([[0], [0], [0], [0]])
# r = M * v_div:  Matrix([[16*c0], [16*c0], [16*c0], [16*c0]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c1, c2, c3], index=0)} len: 1
# Apply rule of "power of two" (#1). Formula: c0 = 2**n // d
n = 4 => c0 = 4

##### div: 5
# v_div:  Matrix([[8], [6], [6], [6], [6]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[8*c0 + 24*c1], [6*c0 + 26*c1], [6*c0 + 26*c1], [6*c0 + 26*c1], [6*c0 + 26*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 5 => c0 = 8, c1 = 6

##### div: 6
# v_div:  Matrix([[12], [10], [10], [12], [10], [10]])
# v_div_diff:  Matrix([[0], [4*c0 - 4*c1], [4*c0 - 4*c1], [0], [4*c0 - 4*c1], [4*c0 - 4*c1]])
# r = M * v_div:  Matrix([[24*c0 + 40*c1], [20*c0 + 44*c1], [20*c0 + 44*c1], [24*c0 + 40*c1], [20*c0 + 44*c1], [20*c0 + 44*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c3], index=0), c1: KeySymbol(members=[c1, c2, c4, c5], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [4], [4], [0], [4], [4]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 2 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 6 => c0 = 12, c1 = 10

##### div: 7
# v_div:  Matrix([[20], [18], [18], [18], [18], [18], [18]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[20*c0 + 108*c1], [18*c0 + 110*c1], [18*c0 + 110*c1], [18*c0 + 110*c1], [18*c0 + 110*c1], [18*c0 + 110*c1], [18*c0 + 110*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 7 => c0 = 20, c1 = 18

##### div: 8
# v_div:  Matrix([[32], [32], [32], [32], [32], [32], [32], [32]])
# v_div_diff:  Matrix([[0], [0], [0], [0], [0], [0], [0], [0]])
# r = M * v_div:  Matrix([[256*c0], [256*c0], [256*c0], [256*c0], [256*c0], [256*c0], [256*c0], [256*c0]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c1, c2, c3, c4, c5, c6, c7], index=0)} len: 1
# Apply rule of "power of two" (#1). Formula: c0 = 2**n // d
n = 8 => c0 = 32

##### div: 9
# v_div:  Matrix([[60], [56], [56], [58], [56], [56], [58], [56], [56]])
# v_div_diff:  Matrix([[0], [4*c0 - 8*c1 + 4*c3], [4*c0 - 8*c1 + 4*c3], [2*c0 - 2*c3], [4*c0 - 8*c1 + 4*c3], [4*c0 - 8*c1 + 4*c3], [2*c0 - 2*c3], [4*c0 - 8*c1 + 4*c3], [4*c0 - 8*c1 + 4*c3]])
# r = M * v_div:  Matrix([[60*c0 + 336*c1 + 116*c3], [56*c0 + 344*c1 + 112*c3], [56*c0 + 344*c1 + 112*c3], [58*c0 + 336*c1 + 118*c3], [56*c0 + 344*c1 + 112*c3], [56*c0 + 344*c1 + 112*c3], [58*c0 + 336*c1 + 118*c3], [56*c0 + 344*c1 + 112*c3], [56*c0 + 344*c1 + 112*c3]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8], index=1), c3: KeySymbol(members=[c3, c6], index=3)} len: 3
Difference with 2 terms: {c3, c0}  Difference: c0 - c3
v_div_diff / (c0 - c3): Matrix([[0], [(4*c0 - 8*c1 + 4*c3)/(c0 - c3)], [(4*c0 - 8*c1 + 4*c3)/(c0 - c3)], [2], [(4*c0 - 8*c1 + 4*c3)/(c0 - c3)], [(4*c0 - 8*c1 + 4*c3)/(c0 - c3)], [2], [(4*c0 - 8*c1 + 4*c3)/(c0 - c3)], [(4*c0 - 8*c1 + 4*c3)/(c0 - c3)]])
i: 1 # occurences of c_0 = mu_0
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
mu_1: 2 # occurences of c3
mu_2: 6 # occurences of c1
o (coefficient c0): 4
p (coefficient c3): 4
q (coefficient c1): -8
diff_0 (c0-c1 as n = d): 4
# Apply rule of "1 difference with 2 terms and a third term with this difference and a third variable" (#3).
difference c0 - c of row_index_of_second_symbol_in_diff:
# f3_1(n, d): j * k**((n//d)-1)
difference c0 - c of row_index_with_3_symbols: 
# f3_2(n, d): m >= 1: j * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * (s from 0 to (m-2) Sum of ((2**(log_2(p) - log_2(k))**s)
  => diff_0 * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * ((2**(log_2(-q) - log_2(k))**s) - 1) // (2**(log_2(-q) - log_2(k)) - 1)
# Formula for c0: (2**n + mu_1 *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c3: (2**n + (mu_1 - d) *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c1: (2**n + mu_1 * f3_1(n, d) + (mu_2 - d) * f3_2(n, d))// d
# n = 9 => c0 = 60, c3 = 58, c1 = 56
# n = 9 => c0-c3: 2, c0-c1: 4
# n = 18 => c0-c3: 4, c0-c1: 24
# n = 27 => c0-c3: 8, c0-c1: 176
# n = 36 => c0-c3: 16, c0-c1: 1376
# n = 45 => c0-c3: 32, c0-c1: 10944
(matric calc.) m: 1, c0-c1: 4, c0-c3: 2
(matric calc.) m: 2, c0-c1: 24, c0-c3: 4
(matric calc.) m: 3, c0-c1: 176, c0-c3: 8
(matric calc.) m: 4, c0-c1: 1376, c0-c3: 16
(matric calc.) m: 5, c0-c1: 10944, c0-c3: 32

##### div: 10
# v_div:  Matrix([[104], [102], [102], [102], [102], [104], [102], [102], [102], [102]])
# v_div_diff:  Matrix([[0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1]])
# r = M * v_div:  Matrix([[208*c0 + 816*c1], [204*c0 + 820*c1], [204*c0 + 820*c1], [204*c0 + 820*c1], [204*c0 + 820*c1], [208*c0 + 816*c1], [204*c0 + 820*c1], [204*c0 + 820*c1], [204*c0 + 820*c1], [204*c0 + 820*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c5], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c6, c7, c8, c9], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [4], [4], [4], [4], [0], [4], [4], [4], [4]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 2 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 10 => c0 = 104, c1 = 102

##### div: 11
# v_div:  Matrix([[188], [186], [186], [186], [186], [186], [186], [186], [186], [186], [186]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[188*c0 + 1860*c1], [186*c0 + 1862*c1], [186*c0 + 1862*c1], [186*c0 + 1862*c1], [186*c0 + 1862*c1], [186*c0 + 1862*c1], [186*c0 + 1862*c1], [186*c0 + 1862*c1], [186*c0 + 1862*c1], [186*c0 + 1862*c1], [186*c0 + 1862*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 11 => c0 = 188, c1 = 186

##### div: 12
# v_div:  Matrix([[344], [340], [340], [344], [340], [340], [344], [340], [340], [344], [340], [340]])
# v_div_diff:  Matrix([[0], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1]])
# r = M * v_div:  Matrix([[1376*c0 + 2720*c1], [1360*c0 + 2736*c1], [1360*c0 + 2736*c1], [1376*c0 + 2720*c1], [1360*c0 + 2736*c1], [1360*c0 + 2736*c1], [1376*c0 + 2720*c1], [1360*c0 + 2736*c1], [1360*c0 + 2736*c1], [1376*c0 + 2720*c1], [1360*c0 + 2736*c1], [1360*c0 + 2736*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c3, c6, c9], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [16], [16], [0], [16], [16], [0], [16], [16], [0], [16], [16]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 4 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 4 # difference c_0 - c_i as n = d
k: 16 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 12 => c0 = 344, c1 = 340

##### div: 13
# v_div:  Matrix([[632], [630], [630], [630], [630], [630], [630], [630], [630], [630], [630], [630], [630]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[632*c0 + 7560*c1], [630*c0 + 7562*c1], [630*c0 + 7562*c1], [630*c0 + 7562*c1], [630*c0 + 7562*c1], [630*c0 + 7562*c1], [630*c0 + 7562*c1], [630*c0 + 7562*c1], [630*c0 + 7562*c1], [630*c0 + 7562*c1], [630*c0 + 7562*c1], [630*c0 + 7562*c1], [630*c0 + 7562*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 13 => c0 = 632, c1 = 630

##### div: 14
# v_div:  Matrix([[1172], [1170], [1170], [1170], [1170], [1170], [1170], [1172], [1170], [1170], [1170], [1170], [1170], [1170]])
# v_div_diff:  Matrix([[0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1]])
# r = M * v_div:  Matrix([[2344*c0 + 14040*c1], [2340*c0 + 14044*c1], [2340*c0 + 14044*c1], [2340*c0 + 14044*c1], [2340*c0 + 14044*c1], [2340*c0 + 14044*c1], [2340*c0 + 14044*c1], [2344*c0 + 14040*c1], [2340*c0 + 14044*c1], [2340*c0 + 14044*c1], [2340*c0 + 14044*c1], [2340*c0 + 14044*c1], [2340*c0 + 14044*c1], [2340*c0 + 14044*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c7], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c8, c9, c10, c11, c12, c13], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [4], [4], [4], [4], [4], [4], [0], [4], [4], [4], [4], [4], [4]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 2 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 14 => c0 = 1172, c1 = 1170

##### div: 15
# v_div:  Matrix([[2192], [2182], [2182], [2188], [2182], [2184], [2188], [2182], [2182], [2188], [2184], [2182], [2188], [2182], [2182]])
# v_div_diff:  Matrix([[0], [10*c0 - 30*c1 + 22*c3 - 2*c5], [10*c0 - 30*c1 + 22*c3 - 2*c5], [4*c0 - 4*c1 - 4*c3 + 4*c5], [10*c0 - 30*c1 + 22*c3 - 2*c5], [8*c0 - 24*c1 + 24*c3 - 8*c5], [4*c0 - 4*c1 - 4*c3 + 4*c5], [10*c0 - 30*c1 + 22*c3 - 2*c5], [10*c0 - 30*c1 + 22*c3 - 2*c5], [4*c0 - 4*c1 - 4*c3 + 4*c5], [8*c0 - 24*c1 + 24*c3 - 8*c5], [10*c0 - 30*c1 + 22*c3 - 2*c5], [4*c0 - 4*c1 - 4*c3 + 4*c5], [10*c0 - 30*c1 + 22*c3 - 2*c5], [10*c0 - 30*c1 + 22*c3 - 2*c5]])
# r = M * v_div:  Matrix([[2192*c0 + 17456*c1 + 8752*c3 + 4368*c5], [2182*c0 + 17486*c1 + 8730*c3 + 4370*c5], [2182*c0 + 17486*c1 + 8730*c3 + 4370*c5], [2188*c0 + 17460*c1 + 8756*c3 + 4364*c5], [2182*c0 + 17486*c1 + 8730*c3 + 4370*c5], [2184*c0 + 17480*c1 + 8728*c3 + 4376*c5], [2188*c0 + 17460*c1 + 8756*c3 + 4364*c5], [2182*c0 + 17486*c1 + 8730*c3 + 4370*c5], [2182*c0 + 17486*c1 + 8730*c3 + 4370*c5], [2188*c0 + 17460*c1 + 8756*c3 + 4364*c5], [2184*c0 + 17480*c1 + 8728*c3 + 4376*c5], [2182*c0 + 17486*c1 + 8730*c3 + 4370*c5], [2188*c0 + 17460*c1 + 8756*c3 + 4364*c5], [2182*c0 + 17486*c1 + 8730*c3 + 4370*c5], [2182*c0 + 17486*c1 + 8730*c3 + 4370*c5]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c7, c8, c11, c13, c14], index=1), c3: KeySymbol(members=[c3, c6, c9, c12], index=3), c5: KeySymbol(members=[c5, c10], index=5)} len: 4
## Ignore div=15 for now. Key symbols count 4.

##### div: 16
# v_div:  Matrix([[4096], [4096], [4096], [4096], [4096], [4096], [4096], [4096], [4096], [4096], [4096], [4096], [4096], [4096], [4096], [4096]])
# v_div_diff:  Matrix([[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0]])
# r = M * v_div:  Matrix([[65536*c0], [65536*c0], [65536*c0], [65536*c0], [65536*c0], [65536*c0], [65536*c0], [65536*c0], [65536*c0], [65536*c0], [65536*c0], [65536*c0], [65536*c0], [65536*c0], [65536*c0], [65536*c0]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15], index=0)} len: 1
# Apply rule of "power of two" (#1). Formula: c0 = 2**n // d
n = 16 => c0 = 4096

##### div: 17
# v_div:  Matrix([[7712], [7710], [7710], [7710], [7710], [7710], [7710], [7710], [7710], [7710], [7710], [7710], [7710], [7710], [7710], [7710], [7710]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[7712*c0 + 123360*c1], [7710*c0 + 123362*c1], [7710*c0 + 123362*c1], [7710*c0 + 123362*c1], [7710*c0 + 123362*c1], [7710*c0 + 123362*c1], [7710*c0 + 123362*c1], [7710*c0 + 123362*c1], [7710*c0 + 123362*c1], [7710*c0 + 123362*c1], [7710*c0 + 123362*c1], [7710*c0 + 123362*c1], [7710*c0 + 123362*c1], [7710*c0 + 123362*c1], [7710*c0 + 123362*c1], [7710*c0 + 123362*c1], [7710*c0 + 123362*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 17 => c0 = 7712, c1 = 7710

##### div: 18
# v_div:  Matrix([[14572], [14560], [14560], [14570], [14560], [14560], [14570], [14560], [14560], [14572], [14560], [14560], [14570], [14560], [14560], [14570], [14560], [14560]])
# v_div_diff:  Matrix([[0], [24*c0 - 64*c1 + 40*c3], [24*c0 - 64*c1 + 40*c3], [4*c0 - 4*c3], [24*c0 - 64*c1 + 40*c3], [24*c0 - 64*c1 + 40*c3], [4*c0 - 4*c3], [24*c0 - 64*c1 + 40*c3], [24*c0 - 64*c1 + 40*c3], [0], [24*c0 - 64*c1 + 40*c3], [24*c0 - 64*c1 + 40*c3], [4*c0 - 4*c3], [24*c0 - 64*c1 + 40*c3], [24*c0 - 64*c1 + 40*c3], [4*c0 - 4*c3], [24*c0 - 64*c1 + 40*c3], [24*c0 - 64*c1 + 40*c3]])
# r = M * v_div:  Matrix([[29144*c0 + 174720*c1 + 58280*c3], [29120*c0 + 174784*c1 + 58240*c3], [29120*c0 + 174784*c1 + 58240*c3], [29140*c0 + 174720*c1 + 58284*c3], [29120*c0 + 174784*c1 + 58240*c3], [29120*c0 + 174784*c1 + 58240*c3], [29140*c0 + 174720*c1 + 58284*c3], [29120*c0 + 174784*c1 + 58240*c3], [29120*c0 + 174784*c1 + 58240*c3], [29144*c0 + 174720*c1 + 58280*c3], [29120*c0 + 174784*c1 + 58240*c3], [29120*c0 + 174784*c1 + 58240*c3], [29140*c0 + 174720*c1 + 58284*c3], [29120*c0 + 174784*c1 + 58240*c3], [29120*c0 + 174784*c1 + 58240*c3], [29140*c0 + 174720*c1 + 58284*c3], [29120*c0 + 174784*c1 + 58240*c3], [29120*c0 + 174784*c1 + 58240*c3]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c9], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c13, c14, c16, c17], index=1), c3: KeySymbol(members=[c3, c6, c12, c15], index=3)} len: 3
Difference with 2 terms: {c3, c0}  Difference: c0 - c3
v_div_diff / (c0 - c3): Matrix([[0], [(24*c0 - 64*c1 + 40*c3)/(c0 - c3)], [(24*c0 - 64*c1 + 40*c3)/(c0 - c3)], [4], [(24*c0 - 64*c1 + 40*c3)/(c0 - c3)], [(24*c0 - 64*c1 + 40*c3)/(c0 - c3)], [4], [(24*c0 - 64*c1 + 40*c3)/(c0 - c3)], [(24*c0 - 64*c1 + 40*c3)/(c0 - c3)], [0], [(24*c0 - 64*c1 + 40*c3)/(c0 - c3)], [(24*c0 - 64*c1 + 40*c3)/(c0 - c3)], [4], [(24*c0 - 64*c1 + 40*c3)/(c0 - c3)], [(24*c0 - 64*c1 + 40*c3)/(c0 - c3)], [4], [(24*c0 - 64*c1 + 40*c3)/(c0 - c3)], [(24*c0 - 64*c1 + 40*c3)/(c0 - c3)]])
i: 2 # occurences of c_0 = mu_0
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
mu_1: 4 # occurences of c3
mu_2: 12 # occurences of c1
o (coefficient c0): 24
p (coefficient c3): 40
q (coefficient c1): -64
diff_0 (c0-c1 as n = d): 12
# Apply rule of "1 difference with 2 terms and a third term with this difference and a third variable" (#3).
difference c0 - c of row_index_of_second_symbol_in_diff:
# f3_1(n, d): j * k**((n//d)-1)
difference c0 - c of row_index_with_3_symbols: 
# f3_2(n, d): m >= 1: j * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * (s from 0 to (m-2) Sum of ((2**(log_2(p) - log_2(k))**s)
  => diff_0 * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * ((2**(log_2(-q) - log_2(k))**s) - 1) // (2**(log_2(-q) - log_2(k)) - 1)
# Formula for c0: (2**n + mu_1 *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c3: (2**n + (mu_1 - d) *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c1: (2**n + mu_1 * f3_1(n, d) + (mu_2 - d) * f3_2(n, d))// d
# n = 18 => c0 = 14572, c3 = 14570, c1 = 14560
# n = 18 => c0-c3: 2, c0-c1: 12
# n = 36 => c0-c3: 8, c0-c1: 688
# n = 54 => c0-c3: 32, c0-c1: 43712
# n = 72 => c0-c3: 128, c0-c1: 2796288
# n = 90 => c0-c3: 512, c0-c1: 178957312
(matric calc.) m: 1, c0-c1: 12, c0-c3: 2
(matric calc.) m: 2, c0-c1: 688, c0-c3: 8
(matric calc.) m: 3, c0-c1: 43712, c0-c3: 32
(matric calc.) m: 4, c0-c1: 2796288, c0-c3: 128
(matric calc.) m: 5, c0-c1: 178957312, c0-c3: 512

##### div: 19
# v_div:  Matrix([[27596], [27594], [27594], [27594], [27594], [27594], [27594], [27594], [27594], [27594], [27594], [27594], [27594], [27594], [27594], [27594], [27594], [27594], [27594]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[27596*c0 + 496692*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1], [27594*c0 + 496694*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 19 => c0 = 27596, c1 = 27594

##### div: 20
# v_div:  Matrix([[52432], [52428], [52428], [52428], [52428], [52432], [52428], [52428], [52428], [52428], [52432], [52428], [52428], [52428], [52428], [52432], [52428], [52428], [52428], [52428]])
# v_div_diff:  Matrix([[0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1]])
# r = M * v_div:  Matrix([[209728*c0 + 838848*c1], [209712*c0 + 838864*c1], [209712*c0 + 838864*c1], [209712*c0 + 838864*c1], [209712*c0 + 838864*c1], [209728*c0 + 838848*c1], [209712*c0 + 838864*c1], [209712*c0 + 838864*c1], [209712*c0 + 838864*c1], [209712*c0 + 838864*c1], [209728*c0 + 838848*c1], [209712*c0 + 838864*c1], [209712*c0 + 838864*c1], [209712*c0 + 838864*c1], [209712*c0 + 838864*c1], [209728*c0 + 838848*c1], [209712*c0 + 838864*c1], [209712*c0 + 838864*c1], [209712*c0 + 838864*c1], [209712*c0 + 838864*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c5, c10, c15], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c6, c7, c8, c9, c11, c12, c13, c14, c16, c17, c18, c19], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [16], [16], [16], [16], [0], [16], [16], [16], [16], [0], [16], [16], [16], [16], [0], [16], [16], [16], [16]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 4 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 4 # difference c_0 - c_i as n = d
k: 16 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 20 => c0 = 52432, c1 = 52428

##### div: 21
# v_div:  Matrix([[99880], [99858], [99858], [99876], [99858], [99858], [99876], [99860], [99858], [99876], [99858], [99858], [99876], [99858], [99860], [99876], [99858], [99858], [99876], [99858], [99858]])
# v_div_diff:  Matrix([[0], [22*c0 - 114*c1 + 106*c3 - 14*c7], [22*c0 - 114*c1 + 106*c3 - 14*c7], [4*c0 - 4*c1 - 4*c3 + 4*c7], [22*c0 - 114*c1 + 106*c3 - 14*c7], [22*c0 - 114*c1 + 106*c3 - 14*c7], [4*c0 - 4*c1 - 4*c3 + 4*c7], [20*c0 - 108*c1 + 108*c3 - 20*c7], [22*c0 - 114*c1 + 106*c3 - 14*c7], [4*c0 - 4*c1 - 4*c3 + 4*c7], [22*c0 - 114*c1 + 106*c3 - 14*c7], [22*c0 - 114*c1 + 106*c3 - 14*c7], [4*c0 - 4*c1 - 4*c3 + 4*c7], [22*c0 - 114*c1 + 106*c3 - 14*c7], [20*c0 - 108*c1 + 108*c3 - 20*c7], [4*c0 - 4*c1 - 4*c3 + 4*c7], [22*c0 - 114*c1 + 106*c3 - 14*c7], [22*c0 - 114*c1 + 106*c3 - 14*c7], [4*c0 - 4*c1 - 4*c3 + 4*c7], [22*c0 - 114*c1 + 106*c3 - 14*c7], [22*c0 - 114*c1 + 106*c3 - 14*c7]])
# r = M * v_div:  Matrix([[99880*c0 + 1198296*c1 + 599256*c3 + 199720*c7], [99858*c0 + 1198410*c1 + 599150*c3 + 199734*c7], [99858*c0 + 1198410*c1 + 599150*c3 + 199734*c7], [99876*c0 + 1198300*c1 + 599260*c3 + 199716*c7], [99858*c0 + 1198410*c1 + 599150*c3 + 199734*c7], [99858*c0 + 1198410*c1 + 599150*c3 + 199734*c7], [99876*c0 + 1198300*c1 + 599260*c3 + 199716*c7], [99860*c0 + 1198404*c1 + 599148*c3 + 199740*c7], [99858*c0 + 1198410*c1 + 599150*c3 + 199734*c7], [99876*c0 + 1198300*c1 + 599260*c3 + 199716*c7], [99858*c0 + 1198410*c1 + 599150*c3 + 199734*c7], [99858*c0 + 1198410*c1 + 599150*c3 + 199734*c7], [99876*c0 + 1198300*c1 + 599260*c3 + 199716*c7], [99858*c0 + 1198410*c1 + 599150*c3 + 199734*c7], [99860*c0 + 1198404*c1 + 599148*c3 + 199740*c7], [99876*c0 + 1198300*c1 + 599260*c3 + 199716*c7], [99858*c0 + 1198410*c1 + 599150*c3 + 199734*c7], [99858*c0 + 1198410*c1 + 599150*c3 + 199734*c7], [99876*c0 + 1198300*c1 + 599260*c3 + 199716*c7], [99858*c0 + 1198410*c1 + 599150*c3 + 199734*c7], [99858*c0 + 1198410*c1 + 599150*c3 + 199734*c7]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c8, c10, c11, c13, c16, c17, c19, c20], index=1), c3: KeySymbol(members=[c3, c6, c9, c12, c15, c18], index=3), c7: KeySymbol(members=[c7, c14], index=7)} len: 4
## Ignore div=21 for now. Key symbols count 4.

##### div: 22
# v_div:  Matrix([[190652], [190650], [190650], [190650], [190650], [190650], [190650], [190650], [190650], [190650], [190650], [190652], [190650], [190650], [190650], [190650], [190650], [190650], [190650], [190650], [190650], [190650]])
# v_div_diff:  Matrix([[0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1]])
# r = M * v_div:  Matrix([[381304*c0 + 3813000*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381304*c0 + 3813000*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1], [381300*c0 + 3813004*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c11], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 2 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 22 => c0 = 190652, c1 = 190650

##### div: 23
# v_div:  Matrix([[364724], [364722], [364722], [364722], [364722], [364722], [364722], [364722], [364722], [364722], [364722], [364722], [364722], [364722], [364722], [364722], [364722], [364722], [364722], [364722], [364722], [364722], [364722]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[364724*c0 + 8023884*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1], [364722*c0 + 8023886*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 23 => c0 = 364724, c1 = 364722

##### div: 24
# v_div:  Matrix([[699072], [699040], [699040], [699072], [699040], [699040], [699072], [699040], [699040], [699072], [699040], [699040], [699072], [699040], [699040], [699072], [699040], [699040], [699072], [699040], [699040], [699072], [699040], [699040]])
# v_div_diff:  Matrix([[0], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1]])
# r = M * v_div:  Matrix([[5592576*c0 + 11184640*c1], [5592320*c0 + 11184896*c1], [5592320*c0 + 11184896*c1], [5592576*c0 + 11184640*c1], [5592320*c0 + 11184896*c1], [5592320*c0 + 11184896*c1], [5592576*c0 + 11184640*c1], [5592320*c0 + 11184896*c1], [5592320*c0 + 11184896*c1], [5592576*c0 + 11184640*c1], [5592320*c0 + 11184896*c1], [5592320*c0 + 11184896*c1], [5592576*c0 + 11184640*c1], [5592320*c0 + 11184896*c1], [5592320*c0 + 11184896*c1], [5592576*c0 + 11184640*c1], [5592320*c0 + 11184896*c1], [5592320*c0 + 11184896*c1], [5592576*c0 + 11184640*c1], [5592320*c0 + 11184896*c1], [5592320*c0 + 11184896*c1], [5592576*c0 + 11184640*c1], [5592320*c0 + 11184896*c1], [5592320*c0 + 11184896*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c3, c6, c9, c12, c15, c18, c21], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c13, c14, c16, c17, c19, c20, c22, c23], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [256], [256], [0], [256], [256], [0], [256], [256], [0], [256], [256], [0], [256], [256], [0], [256], [256], [0], [256], [256], [0], [256], [256]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 8 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 32 # difference c_0 - c_i as n = d
k: 256 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 24 => c0 = 699072, c1 = 699040

##### div: 25
# v_div:  Matrix([[1342184], [1342176], [1342176], [1342176], [1342176], [1342182], [1342176], [1342176], [1342176], [1342176], [1342182], [1342176], [1342176], [1342176], [1342176], [1342182], [1342176], [1342176], [1342176], [1342176], [1342182], [1342176], [1342176], [1342176], [1342176]])
# v_div_diff:  Matrix([[0], [8*c0 - 32*c1 + 24*c5], [8*c0 - 32*c1 + 24*c5], [8*c0 - 32*c1 + 24*c5], [8*c0 - 32*c1 + 24*c5], [2*c0 - 2*c5], [8*c0 - 32*c1 + 24*c5], [8*c0 - 32*c1 + 24*c5], [8*c0 - 32*c1 + 24*c5], [8*c0 - 32*c1 + 24*c5], [2*c0 - 2*c5], [8*c0 - 32*c1 + 24*c5], [8*c0 - 32*c1 + 24*c5], [8*c0 - 32*c1 + 24*c5], [8*c0 - 32*c1 + 24*c5], [2*c0 - 2*c5], [8*c0 - 32*c1 + 24*c5], [8*c0 - 32*c1 + 24*c5], [8*c0 - 32*c1 + 24*c5], [8*c0 - 32*c1 + 24*c5], [2*c0 - 2*c5], [8*c0 - 32*c1 + 24*c5], [8*c0 - 32*c1 + 24*c5], [8*c0 - 32*c1 + 24*c5], [8*c0 - 32*c1 + 24*c5]])
# r = M * v_div:  Matrix([[1342184*c0 + 26843520*c1 + 5368728*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342182*c0 + 26843520*c1 + 5368730*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342182*c0 + 26843520*c1 + 5368730*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342182*c0 + 26843520*c1 + 5368730*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342182*c0 + 26843520*c1 + 5368730*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342176*c0 + 26843552*c1 + 5368704*c5], [1342176*c0 + 26843552*c1 + 5368704*c5]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c6, c7, c8, c9, c11, c12, c13, c14, c16, c17, c18, c19, c21, c22, c23, c24], index=1), c5: KeySymbol(members=[c5, c10, c15, c20], index=5)} len: 3
Difference with 2 terms: {c0, c5}  Difference: c0 - c5
v_div_diff / (c0 - c5): Matrix([[0], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [2], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [2], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [2], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [2], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)], [(8*c0 - 32*c1 + 24*c5)/(c0 - c5)]])
i: 1 # occurences of c_0 = mu_0
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
mu_1: 4 # occurences of c5
mu_2: 20 # occurences of c1
o (coefficient c0): 8
p (coefficient c5): 24
q (coefficient c1): -32
diff_0 (c0-c1 as n = d): 8
# Apply rule of "1 difference with 2 terms and a third term with this difference and a third variable" (#3).
difference c0 - c of row_index_of_second_symbol_in_diff:
# f3_1(n, d): j * k**((n//d)-1)
difference c0 - c of row_index_with_3_symbols: 
# f3_2(n, d): m >= 1: j * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * (s from 0 to (m-2) Sum of ((2**(log_2(p) - log_2(k))**s)
  => diff_0 * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * ((2**(log_2(-q) - log_2(k))**s) - 1) // (2**(log_2(-q) - log_2(k)) - 1)
# Formula for c0: (2**n + mu_1 *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c5: (2**n + (mu_1 - d) *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c1: (2**n + mu_1 * f3_1(n, d) + (mu_2 - d) * f3_2(n, d))// d
# n = 25 => c0 = 1342184, c5 = 1342182, c1 = 1342176
# n = 25 => c0-c5: 2, c0-c1: 8
# n = 50 => c0-c5: 4, c0-c1: 208
# n = 75 => c0-c5: 8, c0-c1: 6560
# n = 100 => c0-c5: 16, c0-c1: 209728
# n = 125 => c0-c5: 32, c0-c1: 6710912
(matric calc.) m: 1, c0-c1: 8, c0-c5: 2
(matric calc.) m: 2, c0-c1: 208, c0-c5: 4
(matric calc.) m: 3, c0-c1: 6560, c0-c5: 8
(matric calc.) m: 4, c0-c1: 209728, c0-c5: 16
(matric calc.) m: 5, c0-c1: 6710912, c0-c5: 32

##### div: 26
# v_div:  Matrix([[2581112], [2581110], [2581110], [2581110], [2581110], [2581110], [2581110], [2581110], [2581110], [2581110], [2581110], [2581110], [2581110], [2581112], [2581110], [2581110], [2581110], [2581110], [2581110], [2581110], [2581110], [2581110], [2581110], [2581110], [2581110], [2581110]])
# v_div_diff:  Matrix([[0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1]])
# r = M * v_div:  Matrix([[5162224*c0 + 61946640*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162224*c0 + 61946640*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1], [5162220*c0 + 61946644*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c13], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 2 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 26 => c0 = 2581112, c1 = 2581110

##### div: 27
# v_div:  Matrix([[4971068], [4971008], [4971008], [4971064], [4971008], [4971008], [4971064], [4971008], [4971008], [4971066], [4971008], [4971008], [4971064], [4971008], [4971008], [4971064], [4971008], [4971008], [4971066], [4971008], [4971008], [4971064], [4971008], [4971008], [4971064], [4971008], [4971008]])
# v_div_diff:  Matrix([[0], [60*c0 - 512*c1 + 336*c3 + 116*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [4*c0 - 8*c3 + 4*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [4*c0 - 8*c3 + 4*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [2*c0 - 2*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [4*c0 - 8*c3 + 4*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [4*c0 - 8*c3 + 4*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [2*c0 - 2*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [4*c0 - 8*c3 + 4*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [4*c0 - 8*c3 + 4*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9], [60*c0 - 512*c1 + 336*c3 + 116*c9]])
# r = M * v_div:  Matrix([[4971068*c0 + 89478144*c1 + 29826384*c3 + 9942132*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971064*c0 + 89478144*c1 + 29826392*c3 + 9942128*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971064*c0 + 89478144*c1 + 29826392*c3 + 9942128*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971066*c0 + 89478144*c1 + 29826384*c3 + 9942134*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971064*c0 + 89478144*c1 + 29826392*c3 + 9942128*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971064*c0 + 89478144*c1 + 29826392*c3 + 9942128*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971066*c0 + 89478144*c1 + 29826384*c3 + 9942134*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971064*c0 + 89478144*c1 + 29826392*c3 + 9942128*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971064*c0 + 89478144*c1 + 29826392*c3 + 9942128*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9], [4971008*c0 + 89478656*c1 + 29826048*c3 + 9942016*c9]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c13, c14, c16, c17, c19, c20, c22, c23, c25, c26], index=1), c3: KeySymbol(members=[c3, c6, c12, c15, c21, c24], index=3), c9: KeySymbol(members=[c9, c18], index=9)} len: 4
## Ignore div=27 for now. Key symbols count 4.

##### div: 28
# v_div:  Matrix([[9586984], [9586980], [9586980], [9586980], [9586980], [9586980], [9586980], [9586984], [9586980], [9586980], [9586980], [9586980], [9586980], [9586980], [9586984], [9586980], [9586980], [9586980], [9586980], [9586980], [9586980], [9586984], [9586980], [9586980], [9586980], [9586980], [9586980], [9586980]])
# v_div_diff:  Matrix([[0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1]])
# r = M * v_div:  Matrix([[38347936*c0 + 230087520*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347936*c0 + 230087520*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347936*c0 + 230087520*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347936*c0 + 230087520*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1], [38347920*c0 + 230087536*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c7, c14, c21], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c8, c9, c10, c11, c12, c13, c15, c16, c17, c18, c19, c20, c22, c23, c24, c25, c26, c27], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [16], [16], [16], [16], [16], [16], [0], [16], [16], [16], [16], [16], [16], [0], [16], [16], [16], [16], [16], [16], [0], [16], [16], [16], [16], [16], [16]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 4 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 4 # difference c_0 - c_i as n = d
k: 16 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 28 => c0 = 9586984, c1 = 9586980

##### div: 29
# v_div:  Matrix([[18512792], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790], [18512790]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[18512792*c0 + 518358120*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1], [18512790*c0 + 518358122*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 29 => c0 = 18512792, c1 = 18512790

##### div: 30
# v_div:  Matrix([[35791472], [35791358], [35791358], [35791460], [35791358], [35791368], [35791460], [35791358], [35791358], [35791460], [35791368], [35791358], [35791460], [35791358], [35791358], [35791472], [35791358], [35791358], [35791460], [35791358], [35791368], [35791460], [35791358], [35791358], [35791460], [35791368], [35791358], [35791460], [35791358], [35791358]])
# v_div_diff:  Matrix([[0], [228*c0 - 860*c1 + 796*c3 - 164*c5], [228*c0 - 860*c1 + 796*c3 - 164*c5], [24*c0 - 40*c1 - 24*c3 + 40*c5], [228*c0 - 860*c1 + 796*c3 - 164*c5], [208*c0 - 816*c1 + 816*c3 - 208*c5], [24*c0 - 40*c1 - 24*c3 + 40*c5], [228*c0 - 860*c1 + 796*c3 - 164*c5], [228*c0 - 860*c1 + 796*c3 - 164*c5], [24*c0 - 40*c1 - 24*c3 + 40*c5], [208*c0 - 816*c1 + 816*c3 - 208*c5], [228*c0 - 860*c1 + 796*c3 - 164*c5], [24*c0 - 40*c1 - 24*c3 + 40*c5], [228*c0 - 860*c1 + 796*c3 - 164*c5], [228*c0 - 860*c1 + 796*c3 - 164*c5], [0], [228*c0 - 860*c1 + 796*c3 - 164*c5], [228*c0 - 860*c1 + 796*c3 - 164*c5], [24*c0 - 40*c1 - 24*c3 + 40*c5], [228*c0 - 860*c1 + 796*c3 - 164*c5], [208*c0 - 816*c1 + 816*c3 - 208*c5], [24*c0 - 40*c1 - 24*c3 + 40*c5], [228*c0 - 860*c1 + 796*c3 - 164*c5], [228*c0 - 860*c1 + 796*c3 - 164*c5], [24*c0 - 40*c1 - 24*c3 + 40*c5], [208*c0 - 816*c1 + 816*c3 - 208*c5], [228*c0 - 860*c1 + 796*c3 - 164*c5], [24*c0 - 40*c1 - 24*c3 + 40*c5], [228*c0 - 860*c1 + 796*c3 - 164*c5], [228*c0 - 860*c1 + 796*c3 - 164*c5]])
# r = M * v_div:  Matrix([[71582944*c0 + 572661728*c1 + 286331680*c3 + 143165472*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5], [71582920*c0 + 572661768*c1 + 286331704*c3 + 143165432*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5], [71582736*c0 + 572662544*c1 + 286330864*c3 + 143165680*c5], [71582920*c0 + 572661768*c1 + 286331704*c3 + 143165432*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5], [71582920*c0 + 572661768*c1 + 286331704*c3 + 143165432*c5], [71582736*c0 + 572662544*c1 + 286330864*c3 + 143165680*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5], [71582920*c0 + 572661768*c1 + 286331704*c3 + 143165432*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5], [71582944*c0 + 572661728*c1 + 286331680*c3 + 143165472*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5], [71582920*c0 + 572661768*c1 + 286331704*c3 + 143165432*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5], [71582736*c0 + 572662544*c1 + 286330864*c3 + 143165680*c5], [71582920*c0 + 572661768*c1 + 286331704*c3 + 143165432*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5], [71582920*c0 + 572661768*c1 + 286331704*c3 + 143165432*c5], [71582736*c0 + 572662544*c1 + 286330864*c3 + 143165680*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5], [71582920*c0 + 572661768*c1 + 286331704*c3 + 143165432*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5], [71582716*c0 + 572662588*c1 + 286330884*c3 + 143165636*c5]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c15], index=0), c1: KeySymbol(members=[c1, c2, c4, c7, c8, c11, c13, c14, c16, c17, c19, c22, c23, c26, c28, c29], index=1), c3: KeySymbol(members=[c3, c6, c9, c12, c18, c21, c24, c27], index=3), c5: KeySymbol(members=[c5, c10, c20, c25], index=5)} len: 4
## Ignore div=30 for now. Key symbols count 4.

##### div: 31
# v_div:  Matrix([[69273668], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666], [69273666]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[69273668*c0 + 2078209980*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1], [69273666*c0 + 2078209982*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 31 => c0 = 69273668, c1 = 69273666

##### div: 32
# v_div:  Matrix([[134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728], [134217728]])
# v_div_diff:  Matrix([[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0]])
# r = M * v_div:  Matrix([[4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0], [4294967296*c0]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31], index=0)} len: 1
# Apply rule of "power of two" (#1). Formula: c0 = 2**n // d
n = 32 => c0 = 134217728

##### div: 33
# v_div:  Matrix([[260301176], [260300986], [260300986], [260301172], [260300986], [260300986], [260301172], [260300986], [260300986], [260301172], [260300986], [260300988], [260301172], [260300986], [260300986], [260301172], [260300986], [260300986], [260301172], [260300986], [260300986], [260301172], [260300988], [260300986], [260301172], [260300986], [260300986], [260301172], [260300986], [260300986], [260301172], [260300986], [260300986]])
# v_div_diff:  Matrix([[0], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [4*c0 - 4*c1 + 4*c11 - 4*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [4*c0 - 4*c1 + 4*c11 - 4*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [4*c0 - 4*c1 + 4*c11 - 4*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [188*c0 - 1860*c1 - 188*c11 + 1860*c3], [4*c0 - 4*c1 + 4*c11 - 4*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [4*c0 - 4*c1 + 4*c11 - 4*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [4*c0 - 4*c1 + 4*c11 - 4*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [4*c0 - 4*c1 + 4*c11 - 4*c3], [188*c0 - 1860*c1 - 188*c11 + 1860*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [4*c0 - 4*c1 + 4*c11 - 4*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [4*c0 - 4*c1 + 4*c11 - 4*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [4*c0 - 4*c1 + 4*c11 - 4*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3], [190*c0 - 1866*c1 - 182*c11 + 1858*c3]])
# r = M * v_div:  Matrix([[260301176*c0 + 5206019720*c1 + 520601976*c11 + 2603011720*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260301172*c0 + 5206019724*c1 + 520601972*c11 + 2603011724*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260301172*c0 + 5206019724*c1 + 520601972*c11 + 2603011724*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260301172*c0 + 5206019724*c1 + 520601972*c11 + 2603011724*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260300988*c0 + 5206021580*c1 + 520602164*c11 + 2603009860*c3], [260301172*c0 + 5206019724*c1 + 520601972*c11 + 2603011724*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260301172*c0 + 5206019724*c1 + 520601972*c11 + 2603011724*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260301172*c0 + 5206019724*c1 + 520601972*c11 + 2603011724*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260301172*c0 + 5206019724*c1 + 520601972*c11 + 2603011724*c3], [260300988*c0 + 5206021580*c1 + 520602164*c11 + 2603009860*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260301172*c0 + 5206019724*c1 + 520601972*c11 + 2603011724*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260301172*c0 + 5206019724*c1 + 520601972*c11 + 2603011724*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260301172*c0 + 5206019724*c1 + 520601972*c11 + 2603011724*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3], [260300986*c0 + 5206021586*c1 + 520602158*c11 + 2603009862*c3]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c13, c14, c16, c17, c19, c20, c23, c25, c26, c28, c29, c31, c32], index=1), c3: KeySymbol(members=[c3, c6, c9, c12, c15, c18, c21, c24, c27, c30], index=3), c11: KeySymbol(members=[c11, c22], index=11)} len: 4
## Ignore div=33 for now. Key symbols count 4.

##### div: 34
# v_div:  Matrix([[505290272], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290272], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270], [505290270]])
# v_div_diff:  Matrix([[0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1]])
# r = M * v_div:  Matrix([[1010580544*c0 + 16169288640*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580544*c0 + 16169288640*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1], [1010580540*c0 + 16169288644*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c17], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 2 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 34 => c0 = 505290272, c1 = 505290270

##### div: 35
# v_div:  Matrix([[981706832], [981706806], [981706806], [981706806], [981706806], [981706824], [981706806], [981706812], [981706806], [981706806], [981706824], [981706806], [981706806], [981706806], [981706812], [981706824], [981706806], [981706806], [981706806], [981706806], [981706824], [981706812], [981706806], [981706806], [981706806], [981706824], [981706806], [981706806], [981706812], [981706806], [981706824], [981706806], [981706806], [981706806], [981706806]])
# v_div_diff:  Matrix([[0], [26*c0 - 134*c1 + 102*c5 + 6*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [8*c0 - 24*c1 - 8*c5 + 24*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [20*c0 - 108*c1 + 108*c5 - 20*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [8*c0 - 24*c1 - 8*c5 + 24*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [20*c0 - 108*c1 + 108*c5 - 20*c7], [8*c0 - 24*c1 - 8*c5 + 24*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [8*c0 - 24*c1 - 8*c5 + 24*c7], [20*c0 - 108*c1 + 108*c5 - 20*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [8*c0 - 24*c1 - 8*c5 + 24*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [20*c0 - 108*c1 + 108*c5 - 20*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [8*c0 - 24*c1 - 8*c5 + 24*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7], [26*c0 - 134*c1 + 102*c5 + 6*c7]])
# r = M * v_div:  Matrix([[981706832*c0 + 23560963344*c1 + 5890240944*c5 + 3926827248*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706824*c0 + 23560963368*c1 + 5890240952*c5 + 3926827224*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706812*c0 + 23560963452*c1 + 5890240836*c5 + 3926827268*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706824*c0 + 23560963368*c1 + 5890240952*c5 + 3926827224*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706812*c0 + 23560963452*c1 + 5890240836*c5 + 3926827268*c7], [981706824*c0 + 23560963368*c1 + 5890240952*c5 + 3926827224*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706824*c0 + 23560963368*c1 + 5890240952*c5 + 3926827224*c7], [981706812*c0 + 23560963452*c1 + 5890240836*c5 + 3926827268*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706824*c0 + 23560963368*c1 + 5890240952*c5 + 3926827224*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706812*c0 + 23560963452*c1 + 5890240836*c5 + 3926827268*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706824*c0 + 23560963368*c1 + 5890240952*c5 + 3926827224*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7], [981706806*c0 + 23560963478*c1 + 5890240842*c5 + 3926827242*c7]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c6, c8, c9, c11, c12, c13, c16, c17, c18, c19, c22, c23, c24, c26, c27, c29, c31, c32, c33, c34], index=1), c5: KeySymbol(members=[c5, c10, c15, c20, c25, c30], index=5), c7: KeySymbol(members=[c7, c14, c21, c28], index=7)} len: 4
## Ignore div=35 for now. Key symbols count 4.

##### div: 36
# v_div:  Matrix([[1908874584], [1908874240], [1908874240], [1908874580], [1908874240], [1908874240], [1908874580], [1908874240], [1908874240], [1908874584], [1908874240], [1908874240], [1908874580], [1908874240], [1908874240], [1908874580], [1908874240], [1908874240], [1908874584], [1908874240], [1908874240], [1908874580], [1908874240], [1908874240], [1908874580], [1908874240], [1908874240], [1908874584], [1908874240], [1908874240], [1908874580], [1908874240], [1908874240], [1908874580], [1908874240], [1908874240]])
# v_div_diff:  Matrix([[0], [1376*c0 - 4096*c1 + 2720*c3], [1376*c0 - 4096*c1 + 2720*c3], [16*c0 - 16*c3], [1376*c0 - 4096*c1 + 2720*c3], [1376*c0 - 4096*c1 + 2720*c3], [16*c0 - 16*c3], [1376*c0 - 4096*c1 + 2720*c3], [1376*c0 - 4096*c1 + 2720*c3], [0], [1376*c0 - 4096*c1 + 2720*c3], [1376*c0 - 4096*c1 + 2720*c3], [16*c0 - 16*c3], [1376*c0 - 4096*c1 + 2720*c3], [1376*c0 - 4096*c1 + 2720*c3], [16*c0 - 16*c3], [1376*c0 - 4096*c1 + 2720*c3], [1376*c0 - 4096*c1 + 2720*c3], [0], [1376*c0 - 4096*c1 + 2720*c3], [1376*c0 - 4096*c1 + 2720*c3], [16*c0 - 16*c3], [1376*c0 - 4096*c1 + 2720*c3], [1376*c0 - 4096*c1 + 2720*c3], [16*c0 - 16*c3], [1376*c0 - 4096*c1 + 2720*c3], [1376*c0 - 4096*c1 + 2720*c3], [0], [1376*c0 - 4096*c1 + 2720*c3], [1376*c0 - 4096*c1 + 2720*c3], [16*c0 - 16*c3], [1376*c0 - 4096*c1 + 2720*c3], [1376*c0 - 4096*c1 + 2720*c3], [16*c0 - 16*c3], [1376*c0 - 4096*c1 + 2720*c3], [1376*c0 - 4096*c1 + 2720*c3]])
# r = M * v_div:  Matrix([[7635498336*c0 + 45812981760*c1 + 15270996640*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635498320*c0 + 45812981760*c1 + 15270996656*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635498320*c0 + 45812981760*c1 + 15270996656*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635498336*c0 + 45812981760*c1 + 15270996640*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635498320*c0 + 45812981760*c1 + 15270996656*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635498320*c0 + 45812981760*c1 + 15270996656*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635498336*c0 + 45812981760*c1 + 15270996640*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635498320*c0 + 45812981760*c1 + 15270996656*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635498320*c0 + 45812981760*c1 + 15270996656*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635498336*c0 + 45812981760*c1 + 15270996640*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635498320*c0 + 45812981760*c1 + 15270996656*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635498320*c0 + 45812981760*c1 + 15270996656*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3], [7635496960*c0 + 45812985856*c1 + 15270993920*c3]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c9, c18, c27], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c13, c14, c16, c17, c19, c20, c22, c23, c25, c26, c28, c29, c31, c32, c34, c35], index=1), c3: KeySymbol(members=[c3, c6, c12, c15, c21, c24, c30, c33], index=3)} len: 3
Difference with 2 terms: {c3, c0}  Difference: c0 - c3
v_div_diff / (c0 - c3): Matrix([[0], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [16], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [16], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [0], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [16], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [16], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [0], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [16], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [16], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [0], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [16], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [16], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)], [(1376*c0 - 4096*c1 + 2720*c3)/(c0 - c3)]])
i: 4 # occurences of c_0 = mu_0
j: 4 # difference c_0 - c_i as n = d
k: 16 # factor of difference from previous step to current step
mu_1: 8 # occurences of c3
mu_2: 24 # occurences of c1
o (coefficient c0): 1376
p (coefficient c3): 2720
q (coefficient c1): -4096
diff_0 (c0-c1 as n = d): 344
# Apply rule of "1 difference with 2 terms and a third term with this difference and a third variable" (#3).
difference c0 - c of row_index_of_second_symbol_in_diff:
# f3_1(n, d): j * k**((n//d)-1)
difference c0 - c of row_index_with_3_symbols: 
# f3_2(n, d): m >= 1: j * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * (s from 0 to (m-2) Sum of ((2**(log_2(p) - log_2(k))**s)
  => diff_0 * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * ((2**(log_2(-q) - log_2(k))**s) - 1) // (2**(log_2(-q) - log_2(k)) - 1)
# Formula for c0: (2**n + mu_1 *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c3: (2**n + (mu_1 - d) *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c1: (2**n + mu_1 * f3_1(n, d) + (mu_2 - d) * f3_2(n, d))// d
# n = 36 => c0 = 1908874584, c3 = 1908874580, c1 = 1908874240
# n = 36 => c0-c3: 4, c0-c1: 344
# n = 72 => c0-c3: 64, c0-c1: 1398144
# n = 108 => c0-c3: 1024, c0-c1: 5726623744
# n = 144 => c0-c3: 16384, c0-c1: 23456248070144
# n = 180 => c0-c3: 262144, c0-c1: 96076792050745344
(matric calc.) m: 1, c0-c1: 344, c0-c3: 4
(matric calc.) m: 2, c0-c1: 1398144, c0-c3: 64
(matric calc.) m: 3, c0-c1: 5726623744, c0-c3: 1024
(matric calc.) m: 4, c0-c1: 23456248070144, c0-c3: 16384
(matric calc.) m: 5, c0-c1: 96076792050745344, c0-c3: 262144

##### div: 37
# v_div:  Matrix
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[3714566312*c0 + 133724387160*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1], [3714566310*c0 + 133724387162*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 37 => c0 = 3714566312, c1 = 3714566310

##### div: 38
# v_div:  Matrix
# v_div_diff:  Matrix([[0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1]])
# r = M * v_div:  Matrix([[14467258264*c0 + 260410648680*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258264*c0 + 260410648680*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1], [14467258260*c0 + 260410648684*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c19], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 2 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 38 => c0 = 7233629132, c1 = 7233629130

##### div: 39
# v_div:  Matrix([[14096303344], [14096302710], [14096302710], [14096303340], [14096302710], [14096302710], [14096303340], [14096302710], [14096302710], [14096303340], [14096302710], [14096302710], [14096303340], [14096302712], [14096302710], [14096303340], [14096302710], [14096302710], [14096303340], [14096302710], [14096302710], [14096303340], [14096302710], [14096302710], [14096303340], [14096302710], [14096302712], [14096303340], [14096302710], [14096302710], [14096303340], [14096302710], [14096302710], [14096303340], [14096302710], [14096302710], [14096303340], [14096302710], [14096302710]])
# v_div_diff:  Matrix([[0], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [4*c0 - 4*c1 + 4*c13 - 4*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [4*c0 - 4*c1 + 4*c13 - 4*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [4*c0 - 4*c1 + 4*c13 - 4*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [4*c0 - 4*c1 + 4*c13 - 4*c3], [632*c0 - 7560*c1 - 632*c13 + 7560*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [4*c0 - 4*c1 + 4*c13 - 4*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [4*c0 - 4*c1 + 4*c13 - 4*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [4*c0 - 4*c1 + 4*c13 - 4*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [4*c0 - 4*c1 + 4*c13 - 4*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [632*c0 - 7560*c1 - 632*c13 + 7560*c3], [4*c0 - 4*c1 + 4*c13 - 4*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [4*c0 - 4*c1 + 4*c13 - 4*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [4*c0 - 4*c1 + 4*c13 - 4*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [4*c0 - 4*c1 + 4*c13 - 4*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3], [634*c0 - 7566*c1 - 626*c13 + 7558*c3]])
# r = M * v_div:  Matrix([[14096303344*c0 + 338311265040*c1 + 28192605424*c13 + 169155640080*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096303340*c0 + 338311265044*c1 + 28192605420*c13 + 169155640084*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096303340*c0 + 338311265044*c1 + 28192605420*c13 + 169155640084*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096303340*c0 + 338311265044*c1 + 28192605420*c13 + 169155640084*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096303340*c0 + 338311265044*c1 + 28192605420*c13 + 169155640084*c3], [14096302712*c0 + 338311272600*c1 + 28192606056*c13 + 169155632520*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096303340*c0 + 338311265044*c1 + 28192605420*c13 + 169155640084*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096303340*c0 + 338311265044*c1 + 28192605420*c13 + 169155640084*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096303340*c0 + 338311265044*c1 + 28192605420*c13 + 169155640084*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096303340*c0 + 338311265044*c1 + 28192605420*c13 + 169155640084*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096302712*c0 + 338311272600*c1 + 28192606056*c13 + 169155632520*c3], [14096303340*c0 + 338311265044*c1 + 28192605420*c13 + 169155640084*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096303340*c0 + 338311265044*c1 + 28192605420*c13 + 169155640084*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096303340*c0 + 338311265044*c1 + 28192605420*c13 + 169155640084*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096303340*c0 + 338311265044*c1 + 28192605420*c13 + 169155640084*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3], [14096302710*c0 + 338311272606*c1 + 28192606050*c13 + 169155632522*c3]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c14, c16, c17, c19, c20, c22, c23, c25, c28, c29, c31, c32, c34, c35, c37, c38], index=1), c3: KeySymbol(members=[c3, c6, c9, c12, c15, c18, c21, c24, c27, c30, c33, c36], index=3), c13: KeySymbol(members=[c13, c26], index=13)} len: 4
## Ignore div=39 for now. Key symbols count 4.

##### div: 40
# v_div:  Matrix
# v_div_diff:  Matrix([[0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1]])
# r = M * v_div:  Matrix([[219902325760*c0 + 879609302016*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325760*c0 + 879609302016*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325760*c0 + 879609302016*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325760*c0 + 879609302016*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325760*c0 + 879609302016*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325760*c0 + 879609302016*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325760*c0 + 879609302016*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325760*c0 + 879609302016*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1], [219902325504*c0 + 879609302272*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c5, c10, c15, c20, c25, c30, c35], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c6, c7, c8, c9, c11, c12, c13, c14, c16, c17, c18, c19, c21, c22, c23, c24, c26, c27, c28, c29, c31, c32, c33, c34, c36, c37, c38, c39], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [256], [256], [256], [256], [0], [256], [256], [256], [256], [0], [256], [256], [256], [256], [0], [256], [256], [256], [256], [0], [256], [256], [256], [256], [0], [256], [256], [256], [256], [0], [256], [256], [256], [256], [0], [256], [256], [256], [256]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 8 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 32 # difference c_0 - c_i as n = d
k: 256 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 40 => c0 = 27487790720, c1 = 27487790688

##### div: 41
# v_div:  Matrix([[53634713552], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550], [53634713550]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[53634713552*c0 + 2145388542000*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1], [53634713550*c0 + 2145388542002*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 41 => c0 = 53634713552, c1 = 53634713550

##### div: 42
# v_div:  Matrix
# v_div_diff:  Matrix([[0], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [24*c0 - 40*c1 - 24*c3 + 40*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [24*c0 - 40*c1 - 24*c3 + 40*c7], [2344*c0 - 14040*c1 + 14040*c3 - 2344*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [24*c0 - 40*c1 - 24*c3 + 40*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [24*c0 - 40*c1 - 24*c3 + 40*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [2344*c0 - 14040*c1 + 14040*c3 - 2344*c7], [24*c0 - 40*c1 - 24*c3 + 40*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [24*c0 - 40*c1 - 24*c3 + 40*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [0], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [24*c0 - 40*c1 - 24*c3 + 40*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [24*c0 - 40*c1 - 24*c3 + 40*c7], [2344*c0 - 14040*c1 + 14040*c3 - 2344*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [24*c0 - 40*c1 - 24*c3 + 40*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [24*c0 - 40*c1 - 24*c3 + 40*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [2344*c0 - 14040*c1 + 14040*c3 - 2344*c7], [24*c0 - 40*c1 - 24*c3 + 40*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [24*c0 - 40*c1 - 24*c3 + 40*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7], [2364*c0 - 14084*c1 + 14020*c3 - 2300*c7]])
# r = M * v_div:  Matrix([[209430787824*c0 + 2513169425520*c1 + 1256584726800*c3 + 418861570960*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430787800*c0 + 2513169425560*c1 + 1256584726824*c3 + 418861570920*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430787800*c0 + 2513169425560*c1 + 1256584726824*c3 + 418861570920*c7], [209430785480*c0 + 2513169439560*c1 + 1256584712760*c3 + 418861573304*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430787800*c0 + 2513169425560*c1 + 1256584726824*c3 + 418861570920*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430787800*c0 + 2513169425560*c1 + 1256584726824*c3 + 418861570920*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430785480*c0 + 2513169439560*c1 + 1256584712760*c3 + 418861573304*c7], [209430787800*c0 + 2513169425560*c1 + 1256584726824*c3 + 418861570920*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430787800*c0 + 2513169425560*c1 + 1256584726824*c3 + 418861570920*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430787824*c0 + 2513169425520*c1 + 1256584726800*c3 + 418861570960*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430787800*c0 + 2513169425560*c1 + 1256584726824*c3 + 418861570920*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430787800*c0 + 2513169425560*c1 + 1256584726824*c3 + 418861570920*c7], [209430785480*c0 + 2513169439560*c1 + 1256584712760*c3 + 418861573304*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430787800*c0 + 2513169425560*c1 + 1256584726824*c3 + 418861570920*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430787800*c0 + 2513169425560*c1 + 1256584726824*c3 + 418861570920*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430785480*c0 + 2513169439560*c1 + 1256584712760*c3 + 418861573304*c7], [209430787800*c0 + 2513169425560*c1 + 1256584726824*c3 + 418861570920*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430787800*c0 + 2513169425560*c1 + 1256584726824*c3 + 418861570920*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7], [209430785460*c0 + 2513169439604*c1 + 1256584712780*c3 + 418861573260*c7]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c21], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c8, c10, c11, c13, c16, c17, c19, c20, c22, c23, c25, c26, c29, c31, c32, c34, c37, c38, c40, c41], index=1), c3: KeySymbol(members=[c3, c6, c9, c12, c15, c18, c24, c27, c30, c33, c36, c39], index=3), c7: KeySymbol(members=[c7, c14, c28, c35], index=7)} len: 4
## Ignore div=42 for now. Key symbols count 4.

##### div: 43
# v_div:  Matrix
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[204560302844*c0 + 8591532719364*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1], [204560302842*c0 + 8591532719366*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 43 => c0 = 204560302844, c1 = 204560302842

##### div: 44
# v_div:  Matrix
# v_div_diff:  Matrix([[0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1]])
# r = M * v_div:  Matrix([[1599289640416*c0 + 15992896404000*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640416*c0 + 15992896404000*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640416*c0 + 15992896404000*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640416*c0 + 15992896404000*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1], [1599289640400*c0 + 15992896404016*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c11, c22, c33], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 4 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 4 # difference c_0 - c_i as n = d
k: 16 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 44 => c0 = 399822410104, c1 = 399822410100

##### div: 45
# v_div:  Matrix([[781874936816], [781874934568], [781874934568], [781874936750], [781874934568], [781874934624], [781874936750], [781874934568], [781874934568], [781874936756], [781874934624], [781874934568], [781874936750], [781874934568], [781874934568], [781874936808], [781874934568], [781874934568], [781874936756], [781874934568], [781874934624], [781874936750], [781874934568], [781874934568], [781874936750], [781874934624], [781874934568], [781874936756], [781874934568], [781874934568], [781874936808], [781874934568], [781874934568], [781874936750], [781874934568], [781874934624], [781874936756], [781874934568], [781874934568], [781874936750], [781874934624], [781874934568], [781874936750], [781874934568], [781874934568]])
# v_div_diff:  Matrix([[0], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [66*c0 - 336*c1 + 110*c15 - 142*c3 + 336*c5 - 34*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [2192*c0 - 26208*c1 + 4368*c15 + 17456*c3 - 6560*c5 + 8752*c9], [66*c0 - 336*c1 + 110*c15 - 142*c3 + 336*c5 - 34*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [60*c0 - 336*c1 + 116*c15 - 116*c3 + 336*c5 - 60*c9], [2192*c0 - 26208*c1 + 4368*c15 + 17456*c3 - 6560*c5 + 8752*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [66*c0 - 336*c1 + 110*c15 - 142*c3 + 336*c5 - 34*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [8*c0 - 8*c15 - 24*c3 + 24*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [60*c0 - 336*c1 + 116*c15 - 116*c3 + 336*c5 - 60*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [2192*c0 - 26208*c1 + 4368*c15 + 17456*c3 - 6560*c5 + 8752*c9], [66*c0 - 336*c1 + 110*c15 - 142*c3 + 336*c5 - 34*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [66*c0 - 336*c1 + 110*c15 - 142*c3 + 336*c5 - 34*c9], [2192*c0 - 26208*c1 + 4368*c15 + 17456*c3 - 6560*c5 + 8752*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [60*c0 - 336*c1 + 116*c15 - 116*c3 + 336*c5 - 60*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [8*c0 - 8*c15 - 24*c3 + 24*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [66*c0 - 336*c1 + 110*c15 - 142*c3 + 336*c5 - 34*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [2192*c0 - 26208*c1 + 4368*c15 + 17456*c3 - 6560*c5 + 8752*c9], [60*c0 - 336*c1 + 116*c15 - 116*c3 + 336*c5 - 60*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [66*c0 - 336*c1 + 110*c15 - 142*c3 + 336*c5 - 34*c9], [2192*c0 - 26208*c1 + 4368*c15 + 17456*c3 - 6560*c5 + 8752*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [66*c0 - 336*c1 + 110*c15 - 142*c3 + 336*c5 - 34*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9], [2248*c0 - 26552*c1 + 4480*c15 + 17344*c3 - 6216*c5 + 8696*c9]])
# r = M * v_div:  Matrix([[781874936816*c0 + 18764998429632*c1 + 1563749873616*c15 + 6254999494000*c3 + 4691249607744*c5 + 3127499747024*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874936750*c0 + 18764998429968*c1 + 1563749873506*c15 + 6254999494142*c3 + 4691249607408*c5 + 3127499747058*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874934624*c0 + 18764998455840*c1 + 1563749869248*c15 + 6254999476544*c3 + 4691249614304*c5 + 3127499738272*c9], [781874936750*c0 + 18764998429968*c1 + 1563749873506*c15 + 6254999494142*c3 + 4691249607408*c5 + 3127499747058*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874936756*c0 + 18764998429968*c1 + 1563749873500*c15 + 6254999494116*c3 + 4691249607408*c5 + 3127499747084*c9], [781874934624*c0 + 18764998455840*c1 + 1563749869248*c15 + 6254999476544*c3 + 4691249614304*c5 + 3127499738272*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874936750*c0 + 18764998429968*c1 + 1563749873506*c15 + 6254999494142*c3 + 4691249607408*c5 + 3127499747058*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874936808*c0 + 18764998429632*c1 + 1563749873624*c15 + 6254999494024*c3 + 4691249607744*c5 + 3127499747000*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874936756*c0 + 18764998429968*c1 + 1563749873500*c15 + 6254999494116*c3 + 4691249607408*c5 + 3127499747084*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874934624*c0 + 18764998455840*c1 + 1563749869248*c15 + 6254999476544*c3 + 4691249614304*c5 + 3127499738272*c9], [781874936750*c0 + 18764998429968*c1 + 1563749873506*c15 + 6254999494142*c3 + 4691249607408*c5 + 3127499747058*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874936750*c0 + 18764998429968*c1 + 1563749873506*c15 + 6254999494142*c3 + 4691249607408*c5 + 3127499747058*c9], [781874934624*c0 + 18764998455840*c1 + 1563749869248*c15 + 6254999476544*c3 + 4691249614304*c5 + 3127499738272*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874936756*c0 + 18764998429968*c1 + 1563749873500*c15 + 6254999494116*c3 + 4691249607408*c5 + 3127499747084*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874936808*c0 + 18764998429632*c1 + 1563749873624*c15 + 6254999494024*c3 + 4691249607744*c5 + 3127499747000*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874936750*c0 + 18764998429968*c1 + 1563749873506*c15 + 6254999494142*c3 + 4691249607408*c5 + 3127499747058*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874934624*c0 + 18764998455840*c1 + 1563749869248*c15 + 6254999476544*c3 + 4691249614304*c5 + 3127499738272*c9], [781874936756*c0 + 18764998429968*c1 + 1563749873500*c15 + 6254999494116*c3 + 4691249607408*c5 + 3127499747084*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874936750*c0 + 18764998429968*c1 + 1563749873506*c15 + 6254999494142*c3 + 4691249607408*c5 + 3127499747058*c9], [781874934624*c0 + 18764998455840*c1 + 1563749869248*c15 + 6254999476544*c3 + 4691249614304*c5 + 3127499738272*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874936750*c0 + 18764998429968*c1 + 1563749873506*c15 + 6254999494142*c3 + 4691249607408*c5 + 3127499747058*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9], [781874934568*c0 + 18764998456184*c1 + 1563749869136*c15 + 6254999476656*c3 + 4691249613960*c5 + 3127499738328*c9]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c7, c8, c11, c13, c14, c16, c17, c19, c22, c23, c26, c28, c29, c31, c32, c34, c37, c38, c41, c43, c44], index=1), c3: KeySymbol(members=[c3, c6, c12, c21, c24, c33, c39, c42], index=3), c5: KeySymbol(members=[c5, c10, c20, c25, c35, c40], index=5), c9: KeySymbol(members=[c9, c18, c27, c36], index=9), c15: KeySymbol(members=[c15, c30], index=15)} len: 6
## Ignore div=45 for now. Key symbols count 6.

##### div: 46
# v_div:  Matrix
# v_div_diff:  Matrix([[0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1]])
# r = M * v_div:  Matrix([[3059510616424*c0 + 67309233561240*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616424*c0 + 67309233561240*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1], [3059510616420*c0 + 67309233561244*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c23], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 2 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 46 => c0 = 1529755308212, c1 = 1529755308210

##### div: 47
# v_div:  Matrix
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[2994414645860*c0 + 137743073709468*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1], [2994414645858*c0 + 137743073709470*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 47 => c0 = 2994414645860, c1 = 2994414645858

##### div: 48
# v_div:  Matrix([[5864062017536], [5864062013440], [5864062013440], [5864062017536], [5864062013440], [5864062013440], [5864062017536], [5864062013440], [5864062013440], [5864062017536], [5864062013440], [5864062013440], [5864062017536], [5864062013440], [5864062013440], [5864062017536], [5864062013440], [5864062013440], [5864062017536], [5864062013440], [5864062013440], [5864062017536], [5864062013440], [5864062013440], [5864062017536], [5864062013440], [5864062013440], [5864062017536], [5864062013440], [5864062013440], [5864062017536], [5864062013440], [5864062013440], [5864062017536], [5864062013440], [5864062013440], [5864062017536], [5864062013440], [5864062013440], [5864062017536], [5864062013440], [5864062013440], [5864062017536], [5864062013440], [5864062013440], [5864062017536], [5864062013440], [5864062013440]])
# v_div_diff:  Matrix([[0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1]])
# r = M * v_div:  Matrix([[93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1], [93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1], [93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1], [93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1], [93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1], [93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1], [93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1], [93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1], [93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1], [93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1], [93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1], [93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1], [93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1], [93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1], [93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1], [93824992280576*c0 + 187649984430080*c1], [93824992215040*c0 + 187649984495616*c1], [93824992215040*c0 + 187649984495616*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c3, c6, c9, c12, c15, c18, c21, c24, c27, c30, c33, c36, c39, c42, c45], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c13, c14, c16, c17, c19, c20, c22, c23, c25, c26, c28, c29, c31, c32, c34, c35, c37, c38, c40, c41, c43, c44, c46, c47], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [65536], [65536], [0], [65536], [65536], [0], [65536], [65536], [0], [65536], [65536], [0], [65536], [65536], [0], [65536], [65536], [0], [65536], [65536], [0], [65536], [65536], [0], [65536], [65536], [0], [65536], [65536], [0], [65536], [65536], [0], [65536], [65536], [0], [65536], [65536], [0], [65536], [65536], [0], [65536], [65536], [0], [65536], [65536]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 16 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 4096 # difference c_0 - c_i as n = d
k: 65536 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 48 => c0 = 5864062017536, c1 = 5864062013440

##### div: 49
# v_div:  Matrix([[11488774559636], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559634], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559634], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559634], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559634], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559634], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559634], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559616], [11488774559616]])
# v_div_diff:  Matrix([[0], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [2*c0 - 2*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [2*c0 - 2*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [2*c0 - 2*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [2*c0 - 2*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [2*c0 - 2*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [2*c0 - 2*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7], [20*c0 - 128*c1 + 108*c7]])
# r = M * v_div:  Matrix([[11488774559636*c0 + 482528531503872*c1 + 68932647357804*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559634*c0 + 482528531503872*c1 + 68932647357806*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559634*c0 + 482528531503872*c1 + 68932647357806*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559634*c0 + 482528531503872*c1 + 68932647357806*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559634*c0 + 482528531503872*c1 + 68932647357806*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559634*c0 + 482528531503872*c1 + 68932647357806*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559634*c0 + 482528531503872*c1 + 68932647357806*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7], [11488774559616*c0 + 482528531504000*c1 + 68932647357696*c7]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c8, c9, c10, c11, c12, c13, c15, c16, c17, c18, c19, c20, c22, c23, c24, c25, c26, c27, c29, c30, c31, c32, c33, c34, c36, c37, c38, c39, c40, c41, c43, c44, c45, c46, c47, c48], index=1), c7: KeySymbol(members=[c7, c14, c21, c28, c35, c42], index=7)} len: 3
Difference with 2 terms: {c0, c7}  Difference: c0 - c7
v_div_diff / (c0 - c7): Matrix([[0], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [2], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [2], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [2], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [2], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [2], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [2], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)], [(20*c0 - 128*c1 + 108*c7)/(c0 - c7)]])
i: 1 # occurences of c_0 = mu_0
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
mu_1: 6 # occurences of c7
mu_2: 42 # occurences of c1
o (coefficient c0): 20
p (coefficient c7): 108
q (coefficient c1): -128
diff_0 (c0-c1 as n = d): 20
# Apply rule of "1 difference with 2 terms and a third term with this difference and a third variable" (#3).
difference c0 - c of row_index_of_second_symbol_in_diff:
# f3_1(n, d): j * k**((n//d)-1)
difference c0 - c of row_index_with_3_symbols: 
# f3_2(n, d): m >= 1: j * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * (s from 0 to (m-2) Sum of ((2**(log_2(p) - log_2(k))**s)
  => diff_0 * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * ((2**(log_2(-q) - log_2(k))**s) - 1) // (2**(log_2(-q) - log_2(k)) - 1)
# Formula for c0: (2**n + mu_1 *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c7: (2**n + (mu_1 - d) *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c1: (2**n + mu_1 * f3_1(n, d) + (mu_2 - d) * f3_2(n, d))// d
# n = 49 => c0 = 11488774559636, c7 = 11488774559634, c1 = 11488774559616
# n = 49 => c0-c7: 2, c0-c1: 20
# n = 98 => c0-c7: 4, c0-c1: 2344
# n = 147 => c0-c7: 8, c0-c1: 299600
# n = 196 => c0-c7: 16, c0-c1: 38347936
# n = 245 => c0-c7: 32, c0-c1: 4908534080
(matric calc.) m: 1, c0-c1: 20, c0-c7: 2
(matric calc.) m: 2, c0-c1: 2344, c0-c7: 4
(matric calc.) m: 3, c0-c1: 299600, c0-c7: 8
(matric calc.) m: 4, c0-c1: 38347936, c0-c7: 16
(matric calc.) m: 5, c0-c1: 4908534080, c0-c7: 32

##### div: 50
# v_div:  Matrix([[22517998136936], [22517998136832], [22517998136832], [22517998136832], [22517998136832], [22517998136934], [22517998136832], [22517998136832], [22517998136832], [22517998136832], [22517998136934], [22517998136832], [22517998136832], [22517998136832], [22517998136832], [22517998136934], [22517998136832], [22517998136832], [22517998136832], [22517998136832], [22517998136934], [22517998136832], [22517998136832], [22517998136832], [22517998136832], [22517998136936], [22517998136832], [22517998136832], [22517998136832], [22517998136832], [22517998136934], [22517998136832], [22517998136832], [22517998136832], [22517998136832], [22517998136934], [22517998136832], [22517998136832], [22517998136832], [22517998136832], [22517998136934], [22517998136832], [22517998136832], [22517998136832], [22517998136832], [22517998136934], [22517998136832], [22517998136832], [22517998136832], [22517998136832]])
# v_div_diff:  Matrix([[0], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [4*c0 - 4*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [4*c0 - 4*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [4*c0 - 4*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [4*c0 - 4*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [0], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [4*c0 - 4*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [4*c0 - 4*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [4*c0 - 4*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [4*c0 - 4*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5], [208*c0 - 1024*c1 + 816*c5]])
# r = M * v_div:  Matrix([[45035996273872*c0 + 900719925473280*c1 + 180143985095472*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273868*c0 + 900719925473280*c1 + 180143985095476*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273868*c0 + 900719925473280*c1 + 180143985095476*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273868*c0 + 900719925473280*c1 + 180143985095476*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273868*c0 + 900719925473280*c1 + 180143985095476*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273872*c0 + 900719925473280*c1 + 180143985095472*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273868*c0 + 900719925473280*c1 + 180143985095476*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273868*c0 + 900719925473280*c1 + 180143985095476*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273868*c0 + 900719925473280*c1 + 180143985095476*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273868*c0 + 900719925473280*c1 + 180143985095476*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5], [45035996273664*c0 + 900719925474304*c1 + 180143985094656*c5]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c25], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c6, c7, c8, c9, c11, c12, c13, c14, c16, c17, c18, c19, c21, c22, c23, c24, c26, c27, c28, c29, c31, c32, c33, c34, c36, c37, c38, c39, c41, c42, c43, c44, c46, c47, c48, c49], index=1), c5: KeySymbol(members=[c5, c10, c15, c20, c30, c35, c40, c45], index=5)} len: 3
Difference with 2 terms: {c0, c5}  Difference: c0 - c5
v_div_diff / (c0 - c5): Matrix([[0], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [4], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [4], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [4], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [4], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [0], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [4], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [4], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [4], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [4], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)], [(208*c0 - 1024*c1 + 816*c5)/(c0 - c5)]])
i: 2 # occurences of c_0 = mu_0
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
mu_1: 8 # occurences of c5
mu_2: 40 # occurences of c1
o (coefficient c0): 208
p (coefficient c5): 816
q (coefficient c1): -1024
diff_0 (c0-c1 as n = d): 104
# Apply rule of "1 difference with 2 terms and a third term with this difference and a third variable" (#3).
difference c0 - c of row_index_of_second_symbol_in_diff:
# f3_1(n, d): j * k**((n//d)-1)
difference c0 - c of row_index_with_3_symbols: 
# f3_2(n, d): m >= 1: j * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * (s from 0 to (m-2) Sum of ((2**(log_2(p) - log_2(k))**s)
  => diff_0 * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * ((2**(log_2(-q) - log_2(k))**s) - 1) // (2**(log_2(-q) - log_2(k)) - 1)
# Formula for c0: (2**n + mu_1 *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c5: (2**n + (mu_1 - d) *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c1: (2**n + mu_1 * f3_1(n, d) + (mu_2 - d) * f3_2(n, d))// d
# n = 50 => c0 = 22517998136936, c5 = 22517998136934, c1 = 22517998136832
# n = 50 => c0-c5: 2, c0-c1: 104
# n = 100 => c0-c5: 8, c0-c1: 104864
# n = 150 => c0-c5: 32, c0-c1: 107374208
# n = 200 => c0-c5: 128, c0-c1: 109951162880
# n = 250 => c0-c5: 512, c0-c1: 112589990684672
(matric calc.) m: 1, c0-c1: 104, c0-c5: 2
(matric calc.) m: 2, c0-c1: 104864, c0-c5: 8
(matric calc.) m: 3, c0-c1: 107374208, c0-c5: 32
(matric calc.) m: 4, c0-c1: 109951162880, c0-c5: 128
(matric calc.) m: 5, c0-c1: 112589990684672, c0-c5: 512

##### div: 51
# v_div:  Matrix([[44152937528384], [44152937520670], [44152937520670], [44152937528380], [44152937520670], [44152937520670], [44152937528380], [44152937520670], [44152937520670], [44152937528380], [44152937520670], [44152937520670], [44152937528380], [44152937520670], [44152937520670], [44152937528380], [44152937520670], [44152937520672], [44152937528380], [44152937520670], [44152937520670], [44152937528380], [44152937520670], [44152937520670], [44152937528380], [44152937520670], [44152937520670], [44152937528380], [44152937520670], [44152937520670], [44152937528380], [44152937520670], [44152937520670], [44152937528380], [44152937520672], [44152937520670], [44152937528380], [44152937520670], [44152937520670], [44152937528380], [44152937520670], [44152937520670], [44152937528380], [44152937520670], [44152937520670], [44152937528380], [44152937520670], [44152937520670], [44152937528380], [44152937520670], [44152937520670]])
# v_div_diff:  Matrix([[0], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7712*c0 - 123360*c1 - 7712*c17 + 123360*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7712*c0 - 123360*c1 - 7712*c17 + 123360*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [4*c0 - 4*c1 + 4*c17 - 4*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3], [7714*c0 - 123366*c1 - 7706*c17 + 123358*c3]])
# r = M * v_div:  Matrix([[44152937528384*c0 + 1412894000661440*c1 + 88305875041344*c17 + 706447000454080*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520672*c0 + 1412894000784800*c1 + 88305875049056*c17 + 706447000330720*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520672*c0 + 1412894000784800*c1 + 88305875049056*c17 + 706447000330720*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937528380*c0 + 1412894000661444*c1 + 88305875041340*c17 + 706447000454084*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3], [44152937520670*c0 + 1412894000784806*c1 + 88305875049050*c17 + 706447000330722*c3]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c13, c14, c16, c19, c20, c22, c23, c25, c26, c28, c29, c31, c32, c35, c37, c38, c40, c41, c43, c44, c46, c47, c49, c50], index=1), c3: KeySymbol(members=[c3, c6, c9, c12, c15, c18, c21, c24, c27, c30, c33, c36, c39, c42, c45, c48], index=3), c17: KeySymbol(members=[c17, c34], index=17)} len: 4
## Ignore div=51 for now. Key symbols count 4.

##### div: 52
# v_div:  Matrix([[86607685141744], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141744], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141744], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141744], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740], [86607685141740]])
# v_div_diff:  Matrix([[0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1]])
# r = M * v_div:  Matrix([[346430740566976*c0 + 4157168886803520*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566976*c0 + 4157168886803520*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566976*c0 + 4157168886803520*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566976*c0 + 4157168886803520*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1], [346430740566960*c0 + 4157168886803536*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c13, c26, c39], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 4 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 4 # difference c_0 - c_i as n = d
k: 16 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 52 => c0 = 86607685141744, c1 = 86607685141740

##### div: 53
# v_div:  Matrix([[169947155749832], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830], [169947155749830]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[169947155749832*c0 + 8837252098991160*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1], [169947155749830*c0 + 8837252098991162*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 53 => c0 = 169947155749832, c1 = 169947155749830

##### div: 54
# v_div:  Matrix([[333599972407532], [333599972392960], [333599972392960], [333599972407520], [333599972392960], [333599972392960], [333599972407520], [333599972392960], [333599972392960], [333599972407530], [333599972392960], [333599972392960], [333599972407520], [333599972392960], [333599972392960], [333599972407520], [333599972392960], [333599972392960], [333599972407530], [333599972392960], [333599972392960], [333599972407520], [333599972392960], [333599972392960], [333599972407520], [333599972392960], [333599972392960], [333599972407532], [333599972392960], [333599972392960], [333599972407520], [333599972392960], [333599972392960], [333599972407520], [333599972392960], [333599972392960], [333599972407530], [333599972392960], [333599972392960], [333599972407520], [333599972392960], [333599972392960], [333599972407520], [333599972392960], [333599972392960], [333599972407530], [333599972392960], [333599972392960], [333599972407520], [333599972392960], [333599972392960], [333599972407520], [333599972392960], [333599972392960]])
# v_div_diff:  Matrix([[0], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [24*c0 - 64*c3 + 40*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [24*c0 - 64*c3 + 40*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [4*c0 - 4*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [24*c0 - 64*c3 + 40*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [24*c0 - 64*c3 + 40*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [4*c0 - 4*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [24*c0 - 64*c3 + 40*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [24*c0 - 64*c3 + 40*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [0], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [24*c0 - 64*c3 + 40*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [24*c0 - 64*c3 + 40*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [4*c0 - 4*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [24*c0 - 64*c3 + 40*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [24*c0 - 64*c3 + 40*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [4*c0 - 4*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [24*c0 - 64*c3 + 40*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [24*c0 - 64*c3 + 40*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9], [29144*c0 - 262144*c1 + 174720*c3 + 58280*c9]])
# r = M * v_div:  Matrix([[667199944815064*c0 + 12009599006146560*c1 + 4003199668890240*c3 + 1334399889630120*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815040*c0 + 12009599006146560*c1 + 4003199668890304*c3 + 1334399889630080*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815040*c0 + 12009599006146560*c1 + 4003199668890304*c3 + 1334399889630080*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815060*c0 + 12009599006146560*c1 + 4003199668890240*c3 + 1334399889630124*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815040*c0 + 12009599006146560*c1 + 4003199668890304*c3 + 1334399889630080*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815040*c0 + 12009599006146560*c1 + 4003199668890304*c3 + 1334399889630080*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815060*c0 + 12009599006146560*c1 + 4003199668890240*c3 + 1334399889630124*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815040*c0 + 12009599006146560*c1 + 4003199668890304*c3 + 1334399889630080*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815040*c0 + 12009599006146560*c1 + 4003199668890304*c3 + 1334399889630080*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815064*c0 + 12009599006146560*c1 + 4003199668890240*c3 + 1334399889630120*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815040*c0 + 12009599006146560*c1 + 4003199668890304*c3 + 1334399889630080*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815040*c0 + 12009599006146560*c1 + 4003199668890304*c3 + 1334399889630080*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815060*c0 + 12009599006146560*c1 + 4003199668890240*c3 + 1334399889630124*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815040*c0 + 12009599006146560*c1 + 4003199668890304*c3 + 1334399889630080*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815040*c0 + 12009599006146560*c1 + 4003199668890304*c3 + 1334399889630080*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815060*c0 + 12009599006146560*c1 + 4003199668890240*c3 + 1334399889630124*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815040*c0 + 12009599006146560*c1 + 4003199668890304*c3 + 1334399889630080*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944815040*c0 + 12009599006146560*c1 + 4003199668890304*c3 + 1334399889630080*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9], [667199944785920*c0 + 12009599006408704*c1 + 4003199668715520*c3 + 1334399889571840*c9]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c27], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c13, c14, c16, c17, c19, c20, c22, c23, c25, c26, c28, c29, c31, c32, c34, c35, c37, c38, c40, c41, c43, c44, c46, c47, c49, c50, c52, c53], index=1), c3: KeySymbol(members=[c3, c6, c12, c15, c21, c24, c30, c33, c39, c42, c48, c51], index=3), c9: KeySymbol(members=[c9, c18, c36, c45], index=9)} len: 4
## Ignore div=54 for now. Key symbols count 4.

##### div: 55
# v_div:  Matrix([[655069036708592], [655069036708398], [655069036708398], [655069036708398], [655069036708398], [655069036708584], [655069036708398], [655069036708398], [655069036708398], [655069036708398], [655069036708584], [655069036708404], [655069036708398], [655069036708398], [655069036708398], [655069036708584], [655069036708398], [655069036708398], [655069036708398], [655069036708398], [655069036708584], [655069036708398], [655069036708404], [655069036708398], [655069036708398], [655069036708584], [655069036708398], [655069036708398], [655069036708398], [655069036708398], [655069036708584], [655069036708398], [655069036708398], [655069036708404], [655069036708398], [655069036708584], [655069036708398], [655069036708398], [655069036708398], [655069036708398], [655069036708584], [655069036708398], [655069036708398], [655069036708398], [655069036708404], [655069036708584], [655069036708398], [655069036708398], [655069036708398], [655069036708398], [655069036708584], [655069036708398], [655069036708398], [655069036708398], [655069036708398]])
# v_div_diff:  Matrix([[0], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [8*c0 - 24*c1 + 24*c11 - 8*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [8*c0 - 24*c1 + 24*c11 - 8*c5], [188*c0 - 1860*c1 - 188*c11 + 1860*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [8*c0 - 24*c1 + 24*c11 - 8*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [8*c0 - 24*c1 + 24*c11 - 8*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [188*c0 - 1860*c1 - 188*c11 + 1860*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [8*c0 - 24*c1 + 24*c11 - 8*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [8*c0 - 24*c1 + 24*c11 - 8*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [188*c0 - 1860*c1 - 188*c11 + 1860*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [8*c0 - 24*c1 + 24*c11 - 8*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [8*c0 - 24*c1 + 24*c11 - 8*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [188*c0 - 1860*c1 - 188*c11 + 1860*c5], [8*c0 - 24*c1 + 24*c11 - 8*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [8*c0 - 24*c1 + 24*c11 - 8*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5], [194*c0 - 1886*c1 - 162*c11 + 1854*c5]])
# r = M * v_div:  Matrix([[655069036708592*c0 + 26202761468335920*c1 + 2620276146833616*c11 + 6550690367085840*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708584*c0 + 26202761468335944*c1 + 2620276146833592*c11 + 6550690367085848*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708584*c0 + 26202761468335944*c1 + 2620276146833592*c11 + 6550690367085848*c5], [655069036708404*c0 + 26202761468337780*c1 + 2620276146833804*c11 + 6550690367083980*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708584*c0 + 26202761468335944*c1 + 2620276146833592*c11 + 6550690367085848*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708584*c0 + 26202761468335944*c1 + 2620276146833592*c11 + 6550690367085848*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708404*c0 + 26202761468337780*c1 + 2620276146833804*c11 + 6550690367083980*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708584*c0 + 26202761468335944*c1 + 2620276146833592*c11 + 6550690367085848*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708584*c0 + 26202761468335944*c1 + 2620276146833592*c11 + 6550690367085848*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708404*c0 + 26202761468337780*c1 + 2620276146833804*c11 + 6550690367083980*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708584*c0 + 26202761468335944*c1 + 2620276146833592*c11 + 6550690367085848*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708584*c0 + 26202761468335944*c1 + 2620276146833592*c11 + 6550690367085848*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708404*c0 + 26202761468337780*c1 + 2620276146833804*c11 + 6550690367083980*c5], [655069036708584*c0 + 26202761468335944*c1 + 2620276146833592*c11 + 6550690367085848*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708584*c0 + 26202761468335944*c1 + 2620276146833592*c11 + 6550690367085848*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5], [655069036708398*c0 + 26202761468337806*c1 + 2620276146833778*c11 + 6550690367083986*c5]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c6, c7, c8, c9, c12, c13, c14, c16, c17, c18, c19, c21, c23, c24, c26, c27, c28, c29, c31, c32, c34, c36, c37, c38, c39, c41, c42, c43, c46, c47, c48, c49, c51, c52, c53, c54], index=1), c5: KeySymbol(members=[c5, c10, c15, c20, c25, c30, c35, c40, c45, c50], index=5), c11: KeySymbol(members=[c11, c22, c33, c44], index=11)} len: 4
## Ignore div=55 for now. Key symbols count 4.

##### div: 56
# v_div:  Matrix([[1286742750677312], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677312], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677312], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677312], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677312], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677312], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677312], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677312], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280], [1286742750677280]])
# v_div_diff:  Matrix([[0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1]])
# r = M * v_div:  Matrix([[10293942005418496*c0 + 61763652032509440*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418496*c0 + 61763652032509440*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418496*c0 + 61763652032509440*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418496*c0 + 61763652032509440*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418496*c0 + 61763652032509440*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418496*c0 + 61763652032509440*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418496*c0 + 61763652032509440*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418496*c0 + 61763652032509440*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1], [10293942005418240*c0 + 61763652032509696*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c7, c14, c21, c28, c35, c42, c49], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c8, c9, c10, c11, c12, c13, c15, c16, c17, c18, c19, c20, c22, c23, c24, c25, c26, c27, c29, c30, c31, c32, c33, c34, c36, c37, c38, c39, c40, c41, c43, c44, c45, c46, c47, c48, c50, c51, c52, c53, c54, c55], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [256], [256], [256], [256], [256], [256], [0], [256], [256], [256], [256], [256], [256], [0], [256], [256], [256], [256], [256], [256], [0], [256], [256], [256], [256], [256], [256], [0], [256], [256], [256], [256], [256], [256], [0], [256], [256], [256], [256], [256], [256], [0], [256], [256], [256], [256], [256], [256], [0], [256], [256], [256], [256], [256], [256]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 8 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 32 # difference c_0 - c_i as n = d
k: 256 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 56 => c0 = 1286742750677312, c1 = 1286742750677280

##### div: 57
# v_div:  Matrix([[2528336632928152], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900556], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900556], [2528336632928148], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900554], [2528336632928148], [2528336632900554], [2528336632900554]])
# v_div_diff:  Matrix([[0], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27596*c0 - 496692*c1 - 27596*c19 + 496692*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27596*c0 - 496692*c1 - 27596*c19 + 496692*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [4*c0 - 4*c1 + 4*c19 - 4*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3], [27598*c0 - 496698*c1 - 27590*c19 + 496690*c3]])
# r = M * v_div:  Matrix([[2528336632928152*c0 + 91020118784419944*c1 + 5056673265801112*c19 + 45510059392706664*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900556*c0 + 91020118784916636*c1 + 5056673265828708*c19 + 45510059392209972*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900556*c0 + 91020118784916636*c1 + 5056673265828708*c19 + 45510059392209972*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632928148*c0 + 91020118784419948*c1 + 5056673265801108*c19 + 45510059392706668*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3], [2528336632900554*c0 + 91020118784916642*c1 + 5056673265828702*c19 + 45510059392209974*c3]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c13, c14, c16, c17, c20, c22, c23, c25, c26, c28, c29, c31, c32, c34, c35, c37, c40, c41, c43, c44, c46, c47, c49, c50, c52, c53, c55, c56], index=1), c3: KeySymbol(members=[c3, c6, c9, c12, c15, c18, c21, c24, c27, c30, c33, c36, c39, c42, c45, c48, c51, c54], index=3), c19: KeySymbol(members=[c19, c38], index=19)} len: 4
## Ignore div=57 for now. Key symbols count 4.

##### div: 58
# v_div:  Matrix([[4969489243995032], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995032], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030], [4969489243995030]])
# v_div_diff:  Matrix([[0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1]])
# r = M * v_div:  Matrix([[9938978487990064*c0 + 278291397663721680*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990064*c0 + 278291397663721680*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1], [9938978487990060*c0 + 278291397663721684*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c29], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 2 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 58 => c0 = 4969489243995032, c1 = 4969489243995030

##### div: 59
# v_div:  Matrix([[9770521225481756], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754], [9770521225481754]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[9770521225481756*c0 + 566690231077941732*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1], [9770521225481754*c0 + 566690231077941734*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 59 => c0 = 9770521225481756, c1 = 9770521225481754

##### div: 60
# v_div:  Matrix([[19215358410149344], [19215358410096572], [19215358410096572], [19215358410149000], [19215358410096572], [19215358410096912], [19215358410149000], [19215358410096572], [19215358410096572], [19215358410149000], [19215358410096912], [19215358410096572], [19215358410149000], [19215358410096572], [19215358410096572], [19215358410149344], [19215358410096572], [19215358410096572], [19215358410149000], [19215358410096572], [19215358410096912], [19215358410149000], [19215358410096572], [19215358410096572], [19215358410149000], [19215358410096912], [19215358410096572], [19215358410149000], [19215358410096572], [19215358410096572], [19215358410149344], [19215358410096572], [19215358410096572], [19215358410149000], [19215358410096572], [19215358410096912], [19215358410149000], [19215358410096572], [19215358410096572], [19215358410149000], [19215358410096912], [19215358410096572], [19215358410149000], [19215358410096572], [19215358410096572], [19215358410149344], [19215358410096572], [19215358410096572], [19215358410149000], [19215358410096572], [19215358410096912], [19215358410149000], [19215358410096572], [19215358410096572], [19215358410149000], [19215358410096912], [19215358410096572], [19215358410149000], [19215358410096572], [19215358410096572]])
# v_div_diff:  Matrix([[0], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [209728*c0 - 838848*c1 + 838848*c3 - 209728*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [209728*c0 - 838848*c1 + 838848*c3 - 209728*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [0], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [209728*c0 - 838848*c1 + 838848*c3 - 209728*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [209728*c0 - 838848*c1 + 838848*c3 - 209728*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [0], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [209728*c0 - 838848*c1 + 838848*c3 - 209728*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [209728*c0 - 838848*c1 + 838848*c3 - 209728*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [0], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [209728*c0 - 838848*c1 + 838848*c3 - 209728*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [209728*c0 - 838848*c1 + 838848*c3 - 209728*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5], [211088*c0 - 841584*c1 + 837488*c3 - 206992*c5]])
# r = M * v_div:  Matrix([[76861433640597376*c0 + 614891469123090304*c1 + 307445734562384000*c3 + 153722867280775296*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640387648*c0 + 614891469123929152*c1 + 307445734561545152*c3 + 153722867280985024*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640387648*c0 + 614891469123929152*c1 + 307445734561545152*c3 + 153722867280985024*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640597376*c0 + 614891469123090304*c1 + 307445734562384000*c3 + 153722867280775296*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640387648*c0 + 614891469123929152*c1 + 307445734561545152*c3 + 153722867280985024*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640387648*c0 + 614891469123929152*c1 + 307445734561545152*c3 + 153722867280985024*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640597376*c0 + 614891469123090304*c1 + 307445734562384000*c3 + 153722867280775296*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640387648*c0 + 614891469123929152*c1 + 307445734561545152*c3 + 153722867280985024*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640387648*c0 + 614891469123929152*c1 + 307445734561545152*c3 + 153722867280985024*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640597376*c0 + 614891469123090304*c1 + 307445734562384000*c3 + 153722867280775296*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640387648*c0 + 614891469123929152*c1 + 307445734561545152*c3 + 153722867280985024*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640387648*c0 + 614891469123929152*c1 + 307445734561545152*c3 + 153722867280985024*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640596000*c0 + 614891469123093024*c1 + 307445734562385376*c3 + 153722867280772576*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5], [76861433640386288*c0 + 614891469123931888*c1 + 307445734561546512*c3 + 153722867280982288*c5]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c15, c30, c45], index=0), c1: KeySymbol(members=[c1, c2, c4, c7, c8, c11, c13, c14, c16, c17, c19, c22, c23, c26, c28, c29, c31, c32, c34, c37, c38, c41, c43, c44, c46, c47, c49, c52, c53, c56, c58, c59], index=1), c3: KeySymbol(members=[c3, c6, c9, c12, c18, c21, c24, c27, c33, c36, c39, c42, c48, c51, c54, c57], index=3), c5: KeySymbol(members=[c5, c10, c20, c25, c35, c40, c50, c55], index=5)} len: 4
## Ignore div=60 for now. Key symbols count 4.

##### div: 61
# v_div:  Matrix([[37800705069076952], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950], [37800705069076950]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[37800705069076952*c0 + 2268042304144617000*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1], [37800705069076950*c0 + 2268042304144617002*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 61 => c0 = 37800705069076952, c1 = 37800705069076950

##### div: 62
# v_div:  Matrix
# v_div_diff:  Matrix([[0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1]])
# r = M * v_div:  Matrix([[148764065110560904*c0 + 4462921953316827000*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560904*c0 + 4462921953316827000*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1], [148764065110560900*c0 + 4462921953316827004*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c31], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 2 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 62 => c0 = 74382032555280452, c1 = 74382032555280450

##### div: 63
# v_div:  Matrix([[146402730743793240], [146402730743693304], [146402730743693304], [146402730743793162], [146402730743693304], [146402730743693304], [146402730743793162], [146402730743693360], [146402730743693304], [146402730743793180], [146402730743693304], [146402730743693304], [146402730743793162], [146402730743693304], [146402730743693360], [146402730743793162], [146402730743693304], [146402730743693304], [146402730743793180], [146402730743693304], [146402730743693304], [146402730743793220], [146402730743693304], [146402730743693304], [146402730743793162], [146402730743693304], [146402730743693304], [146402730743793180], [146402730743693360], [146402730743693304], [146402730743793162], [146402730743693304], [146402730743693304], [146402730743793162], [146402730743693304], [146402730743693360], [146402730743793180], [146402730743693304], [146402730743693304], [146402730743793162], [146402730743693304], [146402730743693304], [146402730743793220], [146402730743693304], [146402730743693304], [146402730743793180], [146402730743693304], [146402730743693304], [146402730743793162], [146402730743693360], [146402730743693304], [146402730743793162], [146402730743693304], [146402730743693304], [146402730743793180], [146402730743693304], [146402730743693360], [146402730743793162], [146402730743693304], [146402730743693304], [146402730743793162], [146402730743693304], [146402730743693304]])
# v_div_diff:  Matrix([[0], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [78*c0 - 336*c1 + 98*c21 - 226*c3 + 336*c7 + 50*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [78*c0 - 336*c1 + 98*c21 - 226*c3 + 336*c7 + 50*c9], [99880*c0 - 1797552*c1 + 199720*c21 + 1198296*c3 - 299600*c7 + 599256*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [60*c0 - 336*c1 + 116*c21 - 116*c3 + 336*c7 - 60*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [78*c0 - 336*c1 + 98*c21 - 226*c3 + 336*c7 + 50*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99880*c0 - 1797552*c1 + 199720*c21 + 1198296*c3 - 299600*c7 + 599256*c9], [78*c0 - 336*c1 + 98*c21 - 226*c3 + 336*c7 + 50*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [60*c0 - 336*c1 + 116*c21 - 116*c3 + 336*c7 - 60*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [20*c0 - 20*c21 - 108*c3 + 108*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [78*c0 - 336*c1 + 98*c21 - 226*c3 + 336*c7 + 50*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [60*c0 - 336*c1 + 116*c21 - 116*c3 + 336*c7 - 60*c9], [99880*c0 - 1797552*c1 + 199720*c21 + 1198296*c3 - 299600*c7 + 599256*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [78*c0 - 336*c1 + 98*c21 - 226*c3 + 336*c7 + 50*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [78*c0 - 336*c1 + 98*c21 - 226*c3 + 336*c7 + 50*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99880*c0 - 1797552*c1 + 199720*c21 + 1198296*c3 - 299600*c7 + 599256*c9], [60*c0 - 336*c1 + 116*c21 - 116*c3 + 336*c7 - 60*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [78*c0 - 336*c1 + 98*c21 - 226*c3 + 336*c7 + 50*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [20*c0 - 20*c21 - 108*c3 + 108*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [60*c0 - 336*c1 + 116*c21 - 116*c3 + 336*c7 - 60*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [78*c0 - 336*c1 + 98*c21 - 226*c3 + 336*c7 + 50*c9], [99880*c0 - 1797552*c1 + 199720*c21 + 1198296*c3 - 299600*c7 + 599256*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [78*c0 - 336*c1 + 98*c21 - 226*c3 + 336*c7 + 50*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [60*c0 - 336*c1 + 116*c21 - 116*c3 + 336*c7 - 60*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99880*c0 - 1797552*c1 + 199720*c21 + 1198296*c3 - 299600*c7 + 599256*c9], [78*c0 - 336*c1 + 98*c21 - 226*c3 + 336*c7 + 50*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [78*c0 - 336*c1 + 98*c21 - 226*c3 + 336*c7 + 50*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9], [99936*c0 - 1797896*c1 + 199832*c21 + 1198184*c3 - 299256*c7 + 599200*c9]])
# r = M * v_div:  Matrix([[146402730743793240*c0 + 5270498306772958944*c1 + 292805461487586440*c21 + 1756832768925517944*c3 + 878416384462160160*c7 + 878416384462759080*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793162*c0 + 5270498306772959280*c1 + 292805461487586342*c21 + 1756832768925518170*c3 + 878416384462159824*c7 + 878416384462759030*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793162*c0 + 5270498306772959280*c1 + 292805461487586342*c21 + 1756832768925518170*c3 + 878416384462159824*c7 + 878416384462759030*c9], [146402730743693360*c0 + 5270498306774756496*c1 + 292805461487386720*c21 + 1756832768924319648*c3 + 878416384462459760*c7 + 878416384462159824*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793180*c0 + 5270498306772959280*c1 + 292805461487586324*c21 + 1756832768925518060*c3 + 878416384462159824*c7 + 878416384462759140*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793162*c0 + 5270498306772959280*c1 + 292805461487586342*c21 + 1756832768925518170*c3 + 878416384462159824*c7 + 878416384462759030*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693360*c0 + 5270498306774756496*c1 + 292805461487386720*c21 + 1756832768924319648*c3 + 878416384462459760*c7 + 878416384462159824*c9], [146402730743793162*c0 + 5270498306772959280*c1 + 292805461487586342*c21 + 1756832768925518170*c3 + 878416384462159824*c7 + 878416384462759030*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793180*c0 + 5270498306772959280*c1 + 292805461487586324*c21 + 1756832768925518060*c3 + 878416384462159824*c7 + 878416384462759140*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793220*c0 + 5270498306772958944*c1 + 292805461487586460*c21 + 1756832768925518052*c3 + 878416384462160160*c7 + 878416384462758972*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793162*c0 + 5270498306772959280*c1 + 292805461487586342*c21 + 1756832768925518170*c3 + 878416384462159824*c7 + 878416384462759030*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793180*c0 + 5270498306772959280*c1 + 292805461487586324*c21 + 1756832768925518060*c3 + 878416384462159824*c7 + 878416384462759140*c9], [146402730743693360*c0 + 5270498306774756496*c1 + 292805461487386720*c21 + 1756832768924319648*c3 + 878416384462459760*c7 + 878416384462159824*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793162*c0 + 5270498306772959280*c1 + 292805461487586342*c21 + 1756832768925518170*c3 + 878416384462159824*c7 + 878416384462759030*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793162*c0 + 5270498306772959280*c1 + 292805461487586342*c21 + 1756832768925518170*c3 + 878416384462159824*c7 + 878416384462759030*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693360*c0 + 5270498306774756496*c1 + 292805461487386720*c21 + 1756832768924319648*c3 + 878416384462459760*c7 + 878416384462159824*c9], [146402730743793180*c0 + 5270498306772959280*c1 + 292805461487586324*c21 + 1756832768925518060*c3 + 878416384462159824*c7 + 878416384462759140*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793162*c0 + 5270498306772959280*c1 + 292805461487586342*c21 + 1756832768925518170*c3 + 878416384462159824*c7 + 878416384462759030*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793220*c0 + 5270498306772958944*c1 + 292805461487586460*c21 + 1756832768925518052*c3 + 878416384462160160*c7 + 878416384462758972*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793180*c0 + 5270498306772959280*c1 + 292805461487586324*c21 + 1756832768925518060*c3 + 878416384462159824*c7 + 878416384462759140*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793162*c0 + 5270498306772959280*c1 + 292805461487586342*c21 + 1756832768925518170*c3 + 878416384462159824*c7 + 878416384462759030*c9], [146402730743693360*c0 + 5270498306774756496*c1 + 292805461487386720*c21 + 1756832768924319648*c3 + 878416384462459760*c7 + 878416384462159824*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793162*c0 + 5270498306772959280*c1 + 292805461487586342*c21 + 1756832768925518170*c3 + 878416384462159824*c7 + 878416384462759030*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793180*c0 + 5270498306772959280*c1 + 292805461487586324*c21 + 1756832768925518060*c3 + 878416384462159824*c7 + 878416384462759140*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693360*c0 + 5270498306774756496*c1 + 292805461487386720*c21 + 1756832768924319648*c3 + 878416384462459760*c7 + 878416384462159824*c9], [146402730743793162*c0 + 5270498306772959280*c1 + 292805461487586342*c21 + 1756832768925518170*c3 + 878416384462159824*c7 + 878416384462759030*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743793162*c0 + 5270498306772959280*c1 + 292805461487586342*c21 + 1756832768925518170*c3 + 878416384462159824*c7 + 878416384462759030*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9], [146402730743693304*c0 + 5270498306774756840*c1 + 292805461487386608*c21 + 1756832768924319760*c3 + 878416384462459416*c7 + 878416384462159880*c9]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c8, c10, c11, c13, c16, c17, c19, c20, c22, c23, c25, c26, c29, c31, c32, c34, c37, c38, c40, c41, c43, c44, c46, c47, c50, c52, c53, c55, c58, c59, c61, c62], index=1), c3: KeySymbol(members=[c3, c6, c12, c15, c24, c30, c33, c39, c48, c51, c57, c60], index=3), c7: KeySymbol(members=[c7, c14, c28, c35, c49, c56], index=7), c9: KeySymbol(members=[c9, c18, c27, c36, c45, c54], index=9), c21: KeySymbol(members=[c21, c42], index=21)} len: 6
## Ignore div=63 for now. Key symbols count 6.

##### div: 64
# v_div:  Matrix
# v_div_diff:  Matrix([[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0]])
# r = M * v_div:  Matrix([[18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0], [18446744073709551616*c0]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63], index=0)} len: 1
# Apply rule of "power of two" (#1). Formula: c0 = 2**n // d
n = 64 => c0 = 288230376151711744

##### div: 65
# v_div:  Matrix([[567592125344909792], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909784], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909784], [567592125344909154], [567592125344909154], [567592125344909160], [567592125344909154], [567592125344909784], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909784], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909784], [567592125344909160], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909784], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909784], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909160], [567592125344909784], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909784], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909784], [567592125344909154], [567592125344909160], [567592125344909154], [567592125344909154], [567592125344909784], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909784], [567592125344909154], [567592125344909154], [567592125344909154], [567592125344909154]])
# v_div_diff:  Matrix([[0], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [8*c0 - 24*c1 + 24*c13 - 8*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [8*c0 - 24*c1 + 24*c13 - 8*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [632*c0 - 7560*c1 - 632*c13 + 7560*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [8*c0 - 24*c1 + 24*c13 - 8*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [8*c0 - 24*c1 + 24*c13 - 8*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [8*c0 - 24*c1 + 24*c13 - 8*c5], [632*c0 - 7560*c1 - 632*c13 + 7560*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [8*c0 - 24*c1 + 24*c13 - 8*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [8*c0 - 24*c1 + 24*c13 - 8*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [632*c0 - 7560*c1 - 632*c13 + 7560*c5], [8*c0 - 24*c1 + 24*c13 - 8*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [8*c0 - 24*c1 + 24*c13 - 8*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [8*c0 - 24*c1 + 24*c13 - 8*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [632*c0 - 7560*c1 - 632*c13 + 7560*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [8*c0 - 24*c1 + 24*c13 - 8*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [8*c0 - 24*c1 + 24*c13 - 8*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5], [638*c0 - 7586*c1 - 606*c13 + 7554*c5]])
# r = M * v_div:  Matrix([[567592125344909792*c0 + 27244422016555639392*c1 + 2270368501379636640*c13 + 6811105504138917408*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909784*c0 + 27244422016555639416*c1 + 2270368501379636616*c13 + 6811105504138917416*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909784*c0 + 27244422016555639416*c1 + 2270368501379636616*c13 + 6811105504138917416*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909160*c0 + 27244422016555646952*c1 + 2270368501379637272*c13 + 6811105504138909848*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909784*c0 + 27244422016555639416*c1 + 2270368501379636616*c13 + 6811105504138917416*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909784*c0 + 27244422016555639416*c1 + 2270368501379636616*c13 + 6811105504138917416*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909784*c0 + 27244422016555639416*c1 + 2270368501379636616*c13 + 6811105504138917416*c5], [567592125344909160*c0 + 27244422016555646952*c1 + 2270368501379637272*c13 + 6811105504138909848*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909784*c0 + 27244422016555639416*c1 + 2270368501379636616*c13 + 6811105504138917416*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909784*c0 + 27244422016555639416*c1 + 2270368501379636616*c13 + 6811105504138917416*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909160*c0 + 27244422016555646952*c1 + 2270368501379637272*c13 + 6811105504138909848*c5], [567592125344909784*c0 + 27244422016555639416*c1 + 2270368501379636616*c13 + 6811105504138917416*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909784*c0 + 27244422016555639416*c1 + 2270368501379636616*c13 + 6811105504138917416*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909784*c0 + 27244422016555639416*c1 + 2270368501379636616*c13 + 6811105504138917416*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909160*c0 + 27244422016555646952*c1 + 2270368501379637272*c13 + 6811105504138909848*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909784*c0 + 27244422016555639416*c1 + 2270368501379636616*c13 + 6811105504138917416*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909784*c0 + 27244422016555639416*c1 + 2270368501379636616*c13 + 6811105504138917416*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5], [567592125344909154*c0 + 27244422016555646978*c1 + 2270368501379637246*c13 + 6811105504138909854*c5]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c6, c7, c8, c9, c11, c12, c14, c16, c17, c18, c19, c21, c22, c23, c24, c27, c28, c29, c31, c32, c33, c34, c36, c37, c38, c41, c42, c43, c44, c46, c47, c48, c49, c51, c53, c54, c56, c57, c58, c59, c61, c62, c63, c64], index=1), c5: KeySymbol(members=[c5, c10, c15, c20, c25, c30, c35, c40, c45, c50, c55, c60], index=5), c13: KeySymbol(members=[c13, c26, c39, c52], index=13)} len: 4
## Ignore div=65 for now. Key symbols count 4.

##### div: 66
# v_div:  Matrix([[1117984489315857512], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666860], [1117984489315857500], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666860], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666850], [1117984489315857512], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666860], [1117984489315857500], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666860], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666850], [1117984489315857500], [1117984489315666850], [1117984489315666850]])
# v_div_diff:  Matrix([[0], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381304*c0 - 3813000*c1 - 381304*c11 + 3813000*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381304*c0 - 3813000*c1 - 381304*c11 + 3813000*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [0], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381304*c0 - 3813000*c1 - 381304*c11 + 3813000*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381304*c0 - 3813000*c1 - 381304*c11 + 3813000*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [24*c0 - 40*c1 + 40*c11 - 24*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3], [381324*c0 - 3813044*c1 - 381260*c11 + 3812980*c3]])
# r = M * v_div:  Matrix([[2235968978631715024*c0 + 44719379572626674000*c1 + 4471937957262667440*c11 + 22359689786317150000*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333720*c0 + 44719379572630487000*c1 + 4471937957263048744*c11 + 22359689786313337000*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333720*c0 + 44719379572630487000*c1 + 4471937957263048744*c11 + 22359689786313337000*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715024*c0 + 44719379572626674000*c1 + 4471937957262667440*c11 + 22359689786317150000*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333720*c0 + 44719379572630487000*c1 + 4471937957263048744*c11 + 22359689786313337000*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333720*c0 + 44719379572630487000*c1 + 4471937957263048744*c11 + 22359689786313337000*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631715000*c0 + 44719379572626674040*c1 + 4471937957262667400*c11 + 22359689786317150024*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3], [2235968978631333700*c0 + 44719379572630487044*c1 + 4471937957263048700*c11 + 22359689786313337020*c3]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c33], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c13, c14, c16, c17, c19, c20, c23, c25, c26, c28, c29, c31, c32, c34, c35, c37, c38, c40, c41, c43, c46, c47, c49, c50, c52, c53, c56, c58, c59, c61, c62, c64, c65], index=1), c3: KeySymbol(members=[c3, c6, c9, c12, c15, c18, c21, c24, c27, c30, c36, c39, c42, c45, c48, c51, c54, c57, c60, c63], index=3), c11: KeySymbol(members=[c11, c22, c44, c55], index=11)} len: 4
## Ignore div=66 for now. Key symbols count 4.

##### div: 67
# v_div:  Matrix([[2202596307308603180], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178], [2202596307308603178]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[2202596307308603180*c0 + 145371356282367809748*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1], [2202596307308603178*c0 + 145371356282367809750*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 67 => c0 = 2202596307308603180, c1 = 2202596307308603178

##### div: 68
# v_div:  Matrix([[4340410370284600384], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600384], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600384], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600384], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380], [4340410370284600380]])
# v_div_diff:  Matrix([[0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1]])
# r = M * v_div:  Matrix([[17361641481138401536*c0 + 277786263698214424320*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401536*c0 + 277786263698214424320*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401536*c0 + 277786263698214424320*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401536*c0 + 277786263698214424320*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1], [17361641481138401520*c0 + 277786263698214424336*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c17, c34, c51], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 4 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 4 # difference c_0 - c_i as n = d
k: 16 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 68 => c0 = 4340410370284600384, c1 = 4340410370284600380

##### div: 69
# v_div:  Matrix([[8555011744329310568], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945844], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945844], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842], [8555011744329310564], [8555011744328945842], [8555011744328945842]])
# v_div_diff:  Matrix([[0], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364724*c0 - 8023884*c1 - 364724*c23 + 8023884*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364724*c0 - 8023884*c1 - 364724*c23 + 8023884*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [4*c0 - 4*c1 + 4*c23 - 4*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3], [364726*c0 - 8023890*c1 - 364718*c23 + 8023882*c3]])
# r = M * v_div:  Matrix([[8555011744329310568*c0 + 376420516750473617048*c1 + 17110023488657891688*c23 + 188210258375244832408*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945844*c0 + 376420516750481640932*c1 + 17110023488658256412*c23 + 188210258375236808524*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945844*c0 + 376420516750481640932*c1 + 17110023488658256412*c23 + 188210258375236808524*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744329310564*c0 + 376420516750473617052*c1 + 17110023488657891684*c23 + 188210258375244832412*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3], [8555011744328945842*c0 + 376420516750481640938*c1 + 17110023488658256406*c23 + 188210258375236808526*c3]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c13, c14, c16, c17, c19, c20, c22, c25, c26, c28, c29, c31, c32, c34, c35, c37, c38, c40, c41, c43, c44, c47, c49, c50, c52, c53, c55, c56, c58, c59, c61, c62, c64, c65, c67, c68], index=1), c3: KeySymbol(members=[c3, c6, c9, c12, c15, c18, c21, c24, c27, c30, c33, c36, c39, c42, c45, c48, c51, c54, c57, c60, c63, c66], index=3), c23: KeySymbol(members=[c23, c46], index=23)} len: 4
## Ignore div=69 for now. Key symbols count 4.

##### div: 70
# v_div:  Matrix([[16865594581677305360], [16865594581677304086], [16865594581677304086], [16865594581677304086], [16865594581677304086], [16865594581677305256], [16865594581677304086], [16865594581677304188], [16865594581677304086], [16865594581677304086], [16865594581677305256], [16865594581677304086], [16865594581677304086], [16865594581677304086], [16865594581677304188], [16865594581677305256], [16865594581677304086], [16865594581677304086], [16865594581677304086], [16865594581677304086], [16865594581677305256], [16865594581677304188], [16865594581677304086], [16865594581677304086], [16865594581677304086], [16865594581677305256], [16865594581677304086], [16865594581677304086], [16865594581677304188], [16865594581677304086], [16865594581677305256], [16865594581677304086], [16865594581677304086], [16865594581677304086], [16865594581677304086], [16865594581677305360], [16865594581677304086], [16865594581677304086], [16865594581677304086], [16865594581677304086], [16865594581677305256], [16865594581677304086], [16865594581677304188], [16865594581677304086], [16865594581677304086], [16865594581677305256], [16865594581677304086], [16865594581677304086], [16865594581677304086], [16865594581677304188], [16865594581677305256], [16865594581677304086], [16865594581677304086], [16865594581677304086], [16865594581677304086], [16865594581677305256], [16865594581677304188], [16865594581677304086], [16865594581677304086], [16865594581677304086], [16865594581677305256], [16865594581677304086], [16865594581677304086], [16865594581677304188], [16865594581677304086], [16865594581677305256], [16865594581677304086], [16865594581677304086], [16865594581677304086], [16865594581677304086]])
# v_div_diff:  Matrix([[0], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [208*c0 - 816*c1 - 208*c5 + 816*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2344*c0 - 14040*c1 + 14040*c5 - 2344*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [208*c0 - 816*c1 - 208*c5 + 816*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2344*c0 - 14040*c1 + 14040*c5 - 2344*c7], [208*c0 - 816*c1 - 208*c5 + 816*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [208*c0 - 816*c1 - 208*c5 + 816*c7], [2344*c0 - 14040*c1 + 14040*c5 - 2344*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [208*c0 - 816*c1 - 208*c5 + 816*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2344*c0 - 14040*c1 + 14040*c5 - 2344*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [208*c0 - 816*c1 - 208*c5 + 816*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [0], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [208*c0 - 816*c1 - 208*c5 + 816*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2344*c0 - 14040*c1 + 14040*c5 - 2344*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [208*c0 - 816*c1 - 208*c5 + 816*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2344*c0 - 14040*c1 + 14040*c5 - 2344*c7], [208*c0 - 816*c1 - 208*c5 + 816*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [208*c0 - 816*c1 - 208*c5 + 816*c7], [2344*c0 - 14040*c1 + 14040*c5 - 2344*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [208*c0 - 816*c1 - 208*c5 + 816*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2344*c0 - 14040*c1 + 14040*c5 - 2344*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [208*c0 - 816*c1 - 208*c5 + 816*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7], [2548*c0 - 14860*c1 + 13836*c5 - 1524*c7]])
# r = M * v_div:  Matrix([[33731189163354610720*c0 + 809548539920510596128*c1 + 202387134980127663072*c5 + 134924756653418433504*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354610512*c0 + 809548539920510596944*c1 + 202387134980127663280*c5 + 134924756653418432688*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608376*c0 + 809548539920510610168*c1 + 202387134980127649032*c5 + 134924756653418435848*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354610512*c0 + 809548539920510596944*c1 + 202387134980127663280*c5 + 134924756653418432688*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608376*c0 + 809548539920510610168*c1 + 202387134980127649032*c5 + 134924756653418435848*c7], [33731189163354610512*c0 + 809548539920510596944*c1 + 202387134980127663280*c5 + 134924756653418432688*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354610512*c0 + 809548539920510596944*c1 + 202387134980127663280*c5 + 134924756653418432688*c7], [33731189163354608376*c0 + 809548539920510610168*c1 + 202387134980127649032*c5 + 134924756653418435848*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354610512*c0 + 809548539920510596944*c1 + 202387134980127663280*c5 + 134924756653418432688*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608376*c0 + 809548539920510610168*c1 + 202387134980127649032*c5 + 134924756653418435848*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354610512*c0 + 809548539920510596944*c1 + 202387134980127663280*c5 + 134924756653418432688*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354610720*c0 + 809548539920510596128*c1 + 202387134980127663072*c5 + 134924756653418433504*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354610512*c0 + 809548539920510596944*c1 + 202387134980127663280*c5 + 134924756653418432688*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608376*c0 + 809548539920510610168*c1 + 202387134980127649032*c5 + 134924756653418435848*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354610512*c0 + 809548539920510596944*c1 + 202387134980127663280*c5 + 134924756653418432688*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608376*c0 + 809548539920510610168*c1 + 202387134980127649032*c5 + 134924756653418435848*c7], [33731189163354610512*c0 + 809548539920510596944*c1 + 202387134980127663280*c5 + 134924756653418432688*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354610512*c0 + 809548539920510596944*c1 + 202387134980127663280*c5 + 134924756653418432688*c7], [33731189163354608376*c0 + 809548539920510610168*c1 + 202387134980127649032*c5 + 134924756653418435848*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354610512*c0 + 809548539920510596944*c1 + 202387134980127663280*c5 + 134924756653418432688*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608376*c0 + 809548539920510610168*c1 + 202387134980127649032*c5 + 134924756653418435848*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354610512*c0 + 809548539920510596944*c1 + 202387134980127663280*c5 + 134924756653418432688*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7], [33731189163354608172*c0 + 809548539920510610988*c1 + 202387134980127649236*c5 + 134924756653418435028*c7]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c35], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c6, c8, c9, c11, c12, c13, c16, c17, c18, c19, c22, c23, c24, c26, c27, c29, c31, c32, c33, c34, c36, c37, c38, c39, c41, c43, c44, c46, c47, c48, c51, c52, c53, c54, c57, c58, c59, c61, c62, c64, c66, c67, c68, c69], index=1), c5: KeySymbol(members=[c5, c10, c15, c20, c25, c30, c40, c45, c50, c55, c60, c65], index=5), c7: KeySymbol(members=[c7, c14, c21, c28, c42, c49, c56, c63], index=7)} len: 4
## Ignore div=70 for now. Key symbols count 4.

##### div: 71
# v_div:  Matrix([[33256101992039755028], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026], [33256101992039755026]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[33256101992039755028*c0 + 2327927139442782851820*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1], [33256101992039755026*c0 + 2327927139442782851822*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 71 => c0 = 33256101992039755028, c1 = 33256101992039755026

##### div: 72
# v_div:  Matrix([[65588423373189982912], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840], [65588423373189982912], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840], [65588423373189982912], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840], [65588423373189982912], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840], [65588423373189982912], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840], [65588423373189982912], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840], [65588423373189982912], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840], [65588423373189982912], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840], [65588423373189982880], [65588423373189283840], [65588423373189283840]])
# v_div_diff:  Matrix([[0], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [0], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [0], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [0], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [0], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [0], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [0], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [0], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [256*c0 - 256*c3], [5592576*c0 - 16777216*c1 + 11184640*c3], [5592576*c0 - 16777216*c1 + 11184640*c3]])
# r = M * v_div:  Matrix([[524707386985519863296*c0 + 3148244321913085624320*c1 + 1049414773971039726080*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863296*c0 + 3148244321913085624320*c1 + 1049414773971039726080*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863296*c0 + 3148244321913085624320*c1 + 1049414773971039726080*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863296*c0 + 3148244321913085624320*c1 + 1049414773971039726080*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863296*c0 + 3148244321913085624320*c1 + 1049414773971039726080*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863296*c0 + 3148244321913085624320*c1 + 1049414773971039726080*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863296*c0 + 3148244321913085624320*c1 + 1049414773971039726080*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863296*c0 + 3148244321913085624320*c1 + 1049414773971039726080*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985519863040*c0 + 3148244321913085624320*c1 + 1049414773971039726336*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3], [524707386985514270720*c0 + 3148244321913102401536*c1 + 1049414773971028541440*c3]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c9, c18, c27, c36, c45, c54, c63], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c13, c14, c16, c17, c19, c20, c22, c23, c25, c26, c28, c29, c31, c32, c34, c35, c37, c38, c40, c41, c43, c44, c46, c47, c49, c50, c52, c53, c55, c56, c58, c59, c61, c62, c64, c65, c67, c68, c70, c71], index=1), c3: KeySymbol(members=[c3, c6, c12, c15, c21, c24, c30, c33, c39, c42, c48, c51, c57, c60, c66, c69], index=3)} len: 3
Difference with 2 terms: {c3, c0}  Difference: c0 - c3
v_div_diff / (c0 - c3): Matrix([[0], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [0], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [0], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [0], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [0], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [0], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [0], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [0], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [256], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)], [(5592576*c0 - 16777216*c1 + 11184640*c3)/(c0 - c3)]])
i: 8 # occurences of c_0 = mu_0
j: 32 # difference c_0 - c_i as n = d
k: 256 # factor of difference from previous step to current step
mu_1: 16 # occurences of c3
mu_2: 48 # occurences of c1
o (coefficient c0): 5592576
p (coefficient c3): 11184640
q (coefficient c1): -16777216
diff_0 (c0-c1 as n = d): 699072
# Apply rule of "1 difference with 2 terms and a third term with this difference and a third variable" (#3).
difference c0 - c of row_index_of_second_symbol_in_diff:
# f3_1(n, d): j * k**((n//d)-1)
difference c0 - c of row_index_with_3_symbols: 
# f3_2(n, d): m >= 1: j * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * (s from 0 to (m-2) Sum of ((2**(log_2(p) - log_2(k))**s)
  => diff_0 * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * ((2**(log_2(-q) - log_2(k))**s) - 1) // (2**(log_2(-q) - log_2(k)) - 1)
# Formula for c0: (2**n + mu_1 *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c3: (2**n + (mu_1 - d) *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c1: (2**n + mu_1 * f3_1(n, d) + (mu_2 - d) * f3_2(n, d))// d
# n = 72 => c0 = 65588423373189982912, c3 = 65588423373189982880, c1 = 65588423373189283840
# n = 72 => c0-c3: 32, c0-c1: 699072
# n = 144 => c0-c3: 8192, c0-c1: 11728124035072
# n = 216 => c0-c3: 2097152, c0-c1: 196765270119569948672
# n = 288 => c0-c3: 536870912, c0-c1: 3301173438094347400088911872
# n = 360 => c0-c3: 137438953472, c0-c1: 55384499824371494704325385804316672
(matric calc.) m: 1, c0-c1: 699072, c0-c3: 32
(matric calc.) m: 2, c0-c1: 11728124035072, c0-c3: 8192
(matric calc.) m: 3, c0-c1: 196765270119569948672, c0-c3: 2097152
(matric calc.) m: 4, c0-c1: 3301173438094347400088911872, c0-c3: 536870912
(matric calc.) m: 5, c0-c1: 55384499824371494704325385804316672, c0-c3: 137438953472

##### div: 73
# v_div:  Matrix([[129379903640264252432], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430], [129379903640264252430]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[129379903640264252432*c0 + 9315353062099026174960*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1], [129379903640264252430*c0 + 9315353062099026174962*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 73 => c0 = 129379903640264252432, c1 = 129379903640264252430

##### div: 74
# v_div:  Matrix([[255263053128088930472], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930472], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470], [255263053128088930470]])
# v_div_diff:  Matrix([[0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1]])
# r = M * v_div:  Matrix([[510526106256177860944*c0 + 18378939825222402993840*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860944*c0 + 18378939825222402993840*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1], [510526106256177860940*c0 + 18378939825222402993844*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c37], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 2 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 74 => c0 = 255263053128088930472, c1 = 255263053128088930470

##### div: 75
# v_div:  Matrix([[503719091506096386000], [503719091506095041632], [503719091506095041632], [503719091506096383808], [503719091506095041632], [503719091506095043814], [503719091506096383808], [503719091506095041632], [503719091506095041632], [503719091506096383808], [503719091506095043814], [503719091506095041632], [503719091506096383808], [503719091506095041632], [503719091506095041632], [503719091506096385996], [503719091506095041632], [503719091506095041632], [503719091506096383808], [503719091506095041632], [503719091506095043814], [503719091506096383808], [503719091506095041632], [503719091506095041632], [503719091506096383808], [503719091506095043816], [503719091506095041632], [503719091506096383808], [503719091506095041632], [503719091506095041632], [503719091506096385996], [503719091506095041632], [503719091506095041632], [503719091506096383808], [503719091506095041632], [503719091506095043814], [503719091506096383808], [503719091506095041632], [503719091506095041632], [503719091506096383808], [503719091506095043814], [503719091506095041632], [503719091506096383808], [503719091506095041632], [503719091506095041632], [503719091506096385996], [503719091506095041632], [503719091506095041632], [503719091506096383808], [503719091506095041632], [503719091506095043816], [503719091506096383808], [503719091506095041632], [503719091506095041632], [503719091506096383808], [503719091506095043814], [503719091506095041632], [503719091506096383808], [503719091506095041632], [503719091506095041632], [503719091506096385996], [503719091506095041632], [503719091506095041632], [503719091506096383808], [503719091506095041632], [503719091506095043814], [503719091506096383808], [503719091506095041632], [503719091506095041632], [503719091506096383808], [503719091506095043814], [503719091506095041632], [503719091506096383808], [503719091506095041632], [503719091506095041632]])
# v_div_diff:  Matrix([[0], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1342186*c0 - 26843520*c1 + 5368726*c15 - 1342178*c25 + 26843520*c3 - 5368734*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1342186*c0 - 26843520*c1 + 5368726*c15 - 1342178*c25 + 26843520*c3 - 5368734*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [4*c0 - 4*c15 + 4*c25 - 4*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1342186*c0 - 26843520*c1 + 5368726*c15 - 1342178*c25 + 26843520*c3 - 5368734*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1342184*c0 - 26843520*c1 + 5368728*c15 - 1342184*c25 + 26843520*c3 - 5368728*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [4*c0 - 4*c15 + 4*c25 - 4*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1342186*c0 - 26843520*c1 + 5368726*c15 - 1342178*c25 + 26843520*c3 - 5368734*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1342186*c0 - 26843520*c1 + 5368726*c15 - 1342178*c25 + 26843520*c3 - 5368734*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [4*c0 - 4*c15 + 4*c25 - 4*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1342184*c0 - 26843520*c1 + 5368728*c15 - 1342184*c25 + 26843520*c3 - 5368728*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1342186*c0 - 26843520*c1 + 5368726*c15 - 1342178*c25 + 26843520*c3 - 5368734*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [4*c0 - 4*c15 + 4*c25 - 4*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1342186*c0 - 26843520*c1 + 5368726*c15 - 1342178*c25 + 26843520*c3 - 5368734*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1342186*c0 - 26843520*c1 + 5368726*c15 - 1342178*c25 + 26843520*c3 - 5368734*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [2192*c0 - 21824*c1 + 8752*c15 + 4368*c25 - 10944*c3 + 17456*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5], [1344368*c0 - 26865376*c1 + 5377456*c15 - 1337808*c25 + 26832608*c3 - 5351248*c5]])
# r = M * v_div:  Matrix([[503719091506096386000*c0 + 20148763660243801665280*c1 + 2014876366024385543984*c15 + 1007438183012190087632*c25 + 10074381830121927676160*c3 + 4029752732048760350512*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095043814*c0 + 20148763660243828508800*c1 + 2014876366024380175258*c15 + 1007438183012191429810*c25 + 10074381830121900832640*c3 + 4029752732048765719246*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095043814*c0 + 20148763660243828508800*c1 + 2014876366024380175258*c15 + 1007438183012191429810*c25 + 10074381830121900832640*c3 + 4029752732048765719246*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096385996*c0 + 20148763660243801665280*c1 + 2014876366024385543988*c15 + 1007438183012190087628*c25 + 10074381830121927676160*c3 + 4029752732048760350516*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095043814*c0 + 20148763660243828508800*c1 + 2014876366024380175258*c15 + 1007438183012191429810*c25 + 10074381830121900832640*c3 + 4029752732048765719246*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095043816*c0 + 20148763660243828508800*c1 + 2014876366024380175256*c15 + 1007438183012191429816*c25 + 10074381830121900832640*c3 + 4029752732048765719240*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096385996*c0 + 20148763660243801665280*c1 + 2014876366024385543988*c15 + 1007438183012190087628*c25 + 10074381830121927676160*c3 + 4029752732048760350516*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095043814*c0 + 20148763660243828508800*c1 + 2014876366024380175258*c15 + 1007438183012191429810*c25 + 10074381830121900832640*c3 + 4029752732048765719246*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095043814*c0 + 20148763660243828508800*c1 + 2014876366024380175258*c15 + 1007438183012191429810*c25 + 10074381830121900832640*c3 + 4029752732048765719246*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096385996*c0 + 20148763660243801665280*c1 + 2014876366024385543988*c15 + 1007438183012190087628*c25 + 10074381830121927676160*c3 + 4029752732048760350516*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095043816*c0 + 20148763660243828508800*c1 + 2014876366024380175256*c15 + 1007438183012191429816*c25 + 10074381830121900832640*c3 + 4029752732048765719240*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095043814*c0 + 20148763660243828508800*c1 + 2014876366024380175258*c15 + 1007438183012191429810*c25 + 10074381830121900832640*c3 + 4029752732048765719246*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096385996*c0 + 20148763660243801665280*c1 + 2014876366024385543988*c15 + 1007438183012190087628*c25 + 10074381830121927676160*c3 + 4029752732048760350516*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095043814*c0 + 20148763660243828508800*c1 + 2014876366024380175258*c15 + 1007438183012191429810*c25 + 10074381830121900832640*c3 + 4029752732048765719246*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095043814*c0 + 20148763660243828508800*c1 + 2014876366024380175258*c15 + 1007438183012191429810*c25 + 10074381830121900832640*c3 + 4029752732048765719246*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506096383808*c0 + 20148763660243801687104*c1 + 2014876366024385535232*c15 + 1007438183012190083264*c25 + 10074381830121927687104*c3 + 4029752732048760333056*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5], [503719091506095041632*c0 + 20148763660243828530656*c1 + 2014876366024380166528*c15 + 1007438183012191425440*c25 + 10074381830121900843552*c3 + 4029752732048765701760*c5]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c7, c8, c11, c13, c14, c16, c17, c19, c22, c23, c26, c28, c29, c31, c32, c34, c37, c38, c41, c43, c44, c46, c47, c49, c52, c53, c56, c58, c59, c61, c62, c64, c67, c68, c71, c73, c74], index=1), c3: KeySymbol(members=[c3, c6, c9, c12, c18, c21, c24, c27, c33, c36, c39, c42, c48, c51, c54, c57, c63, c66, c69, c72], index=3), c5: KeySymbol(members=[c5, c10, c20, c35, c40, c55, c65, c70], index=5), c15: KeySymbol(members=[c15, c30, c45, c60], index=15), c25: KeySymbol(members=[c25, c50], index=25)} len: 6
## Ignore div=75 for now. Key symbols count 6.

##### div: 76
# v_div:  Matrix([[994182417446241097624], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097624], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097624], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097624], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620], [994182417446241097620]])
# v_div_diff:  Matrix([[0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1]])
# r = M * v_div:  Matrix([[3976729669784964390496*c0 + 71581134056129359028640*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390496*c0 + 71581134056129359028640*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390496*c0 + 71581134056129359028640*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390496*c0 + 71581134056129359028640*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1], [3976729669784964390480*c0 + 71581134056129359028656*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c19, c38, c57], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [0], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16], [16]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 4 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 4 # difference c_0 - c_i as n = d
k: 16 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 76 => c0 = 994182417446241097624, c1 = 994182417446241097620

##### div: 77
# v_div:  Matrix([[1962541914958813595480], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595460], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595292], [1962541914958813595274], [1962541914958813595274], [1962541914958813595460], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595460], [1962541914958813595292], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595460], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595292], [1962541914958813595274], [1962541914958813595460], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595460], [1962541914958813595274], [1962541914958813595292], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595460], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595292], [1962541914958813595460], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595460], [1962541914958813595274], [1962541914958813595274], [1962541914958813595292], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595460], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274], [1962541914958813595274]])
# v_div_diff:  Matrix([[0], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [20*c0 - 108*c1 + 108*c11 - 20*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [188*c0 - 1860*c1 - 188*c11 + 1860*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [20*c0 - 108*c1 + 108*c11 - 20*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [20*c0 - 108*c1 + 108*c11 - 20*c7], [188*c0 - 1860*c1 - 188*c11 + 1860*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [20*c0 - 108*c1 + 108*c11 - 20*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [188*c0 - 1860*c1 - 188*c11 + 1860*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [20*c0 - 108*c1 + 108*c11 - 20*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [20*c0 - 108*c1 + 108*c11 - 20*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [188*c0 - 1860*c1 - 188*c11 + 1860*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [20*c0 - 108*c1 + 108*c11 - 20*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [188*c0 - 1860*c1 - 188*c11 + 1860*c7], [20*c0 - 108*c1 + 108*c11 - 20*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [20*c0 - 108*c1 + 108*c11 - 20*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [188*c0 - 1860*c1 - 188*c11 + 1860*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [20*c0 - 108*c1 + 108*c11 - 20*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7], [206*c0 - 1970*c1 - 78*c11 + 1842*c7]])
# r = M * v_div:  Matrix([[1962541914958813595480*c0 + 117752514897528815716440*c1 + 11775251489752881571752*c11 + 19625419149588135954600*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595460*c0 + 117752514897528815716548*c1 + 11775251489752881571644*c11 + 19625419149588135954620*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595292*c0 + 117752514897528815718300*c1 + 11775251489752881571940*c11 + 19625419149588135952740*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595460*c0 + 117752514897528815716548*c1 + 11775251489752881571644*c11 + 19625419149588135954620*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595460*c0 + 117752514897528815716548*c1 + 11775251489752881571644*c11 + 19625419149588135954620*c7], [1962541914958813595292*c0 + 117752514897528815718300*c1 + 11775251489752881571940*c11 + 19625419149588135952740*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595460*c0 + 117752514897528815716548*c1 + 11775251489752881571644*c11 + 19625419149588135954620*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595292*c0 + 117752514897528815718300*c1 + 11775251489752881571940*c11 + 19625419149588135952740*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595460*c0 + 117752514897528815716548*c1 + 11775251489752881571644*c11 + 19625419149588135954620*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595460*c0 + 117752514897528815716548*c1 + 11775251489752881571644*c11 + 19625419149588135954620*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595292*c0 + 117752514897528815718300*c1 + 11775251489752881571940*c11 + 19625419149588135952740*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595460*c0 + 117752514897528815716548*c1 + 11775251489752881571644*c11 + 19625419149588135954620*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595292*c0 + 117752514897528815718300*c1 + 11775251489752881571940*c11 + 19625419149588135952740*c7], [1962541914958813595460*c0 + 117752514897528815716548*c1 + 11775251489752881571644*c11 + 19625419149588135954620*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595460*c0 + 117752514897528815716548*c1 + 11775251489752881571644*c11 + 19625419149588135954620*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595292*c0 + 117752514897528815718300*c1 + 11775251489752881571940*c11 + 19625419149588135952740*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595460*c0 + 117752514897528815716548*c1 + 11775251489752881571644*c11 + 19625419149588135954620*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7], [1962541914958813595274*c0 + 117752514897528815718410*c1 + 11775251489752881571830*c11 + 19625419149588135952758*c7]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c8, c9, c10, c12, c13, c15, c16, c17, c18, c19, c20, c23, c24, c25, c26, c27, c29, c30, c31, c32, c34, c36, c37, c38, c39, c40, c41, c43, c45, c46, c47, c48, c50, c51, c52, c53, c54, c57, c58, c59, c60, c61, c62, c64, c65, c67, c68, c69, c71, c72, c73, c74, c75, c76], index=1), c7: KeySymbol(members=[c7, c14, c21, c28, c35, c42, c49, c56, c63, c70], index=7), c11: KeySymbol(members=[c11, c22, c33, c44, c55, c66], index=11)} len: 4
## Ignore div=77 for now. Key symbols count 4.

##### div: 78
# v_div:  Matrix([[3874762242354582408912], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827800], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827800], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408912], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827800], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827800], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790], [3874762242354582408900], [3874762242354579827790], [3874762242354579827790]])
# v_div_diff:  Matrix([[0], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162224*c0 - 61946640*c1 - 5162224*c13 + 61946640*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162224*c0 - 61946640*c1 - 5162224*c13 + 61946640*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [0], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162224*c0 - 61946640*c1 - 5162224*c13 + 61946640*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162224*c0 - 61946640*c1 - 5162224*c13 + 61946640*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [24*c0 - 40*c1 + 40*c13 - 24*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3], [5162244*c0 - 61946684*c1 - 5162180*c13 + 61946620*c3]])
# r = M * v_div:  Matrix([[7749524484709164817824*c0 + 185988587633019831733920*c1 + 15499048969418319311200*c13 + 92994293816509977813600*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655600*c0 + 185988587633019893680560*c1 + 15499048969418324473424*c13 + 92994293816509915866960*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655600*c0 + 185988587633019893680560*c1 + 15499048969418324473424*c13 + 92994293816509915866960*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817824*c0 + 185988587633019831733920*c1 + 15499048969418319311200*c13 + 92994293816509977813600*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655600*c0 + 185988587633019893680560*c1 + 15499048969418324473424*c13 + 92994293816509915866960*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655600*c0 + 185988587633019893680560*c1 + 15499048969418324473424*c13 + 92994293816509915866960*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709164817800*c0 + 185988587633019831733960*c1 + 15499048969418319311160*c13 + 92994293816509977813624*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3], [7749524484709159655580*c0 + 185988587633019893680604*c1 + 15499048969418324473380*c13 + 92994293816509915866980*c3]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c39], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c14, c16, c17, c19, c20, c22, c23, c25, c28, c29, c31, c32, c34, c35, c37, c38, c40, c41, c43, c44, c46, c47, c49, c50, c53, c55, c56, c58, c59, c61, c62, c64, c67, c68, c70, c71, c73, c74, c76, c77], index=1), c3: KeySymbol(members=[c3, c6, c9, c12, c15, c18, c21, c24, c27, c30, c33, c36, c42, c45, c48, c51, c54, c57, c60, c63, c66, c69, c72, c75], index=3), c13: KeySymbol(members=[c13, c26, c52, c65], index=13)} len: 4
## Ignore div=78 for now. Key symbols count 4.

##### div: 79
# v_div:  Matrix([[7651429238067273257636], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634], [7651429238067273257634]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[7651429238067273257636*c0 + 596811480569247314095452*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1], [7651429238067273257634*c0 + 596811480569247314095454*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 79 => c0 = 7651429238067273257636, c1 = 7651429238067273257634

##### div: 80
# v_div:  Matrix([[15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864687104], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008], [15111572745182864683008]])
# v_div_diff:  Matrix([[0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [0], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1], [65536*c0 - 65536*c1]])
# r = M * v_div:  Matrix([[241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834993664*c0 + 967140655691703339712512*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1], [241785163922925834928128*c0 + 967140655691703339778048*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c5, c10, c15, c20, c25, c30, c35, c40, c45, c50, c55, c60, c65, c70, c75], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c6, c7, c8, c9, c11, c12, c13, c14, c16, c17, c18, c19, c21, c22, c23, c24, c26, c27, c28, c29, c31, c32, c33, c34, c36, c37, c38, c39, c41, c42, c43, c44, c46, c47, c48, c49, c51, c52, c53, c54, c56, c57, c58, c59, c61, c62, c63, c64, c66, c67, c68, c69, c71, c72, c73, c74, c76, c77, c78, c79], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix
# Apply rule of "1 difference with 2 terms" (#2).
i: 16 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 4096 # difference c_0 - c_i as n = d
k: 65536 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 80 => c0 = 15111572745182864687104, c1 = 15111572745182864683008

##### div: 81
# v_div:  Matrix([[29850020237398254541372], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541368], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541368], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541370], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541368], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541368], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541370], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541368], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541368], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304], [29850020237398254541312], [29850020237398249570304], [29850020237398249570304]])
# v_div_diff:  Matrix([[0], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4*c0 + 4*c27 - 8*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4*c0 + 4*c27 - 8*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [2*c0 - 2*c27], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4*c0 + 4*c27 - 8*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4*c0 + 4*c27 - 8*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [2*c0 - 2*c27], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4*c0 + 4*c27 - 8*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4*c0 + 4*c27 - 8*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [60*c0 + 116*c27 - 512*c3 + 336*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9], [4971068*c0 - 134217728*c1 + 9942132*c27 + 89478144*c3 + 29826384*c9]])
# r = M * v_div:  Matrix([[29850020237398254541372*c0 + 1611901092819505476796416*c1 + 59700040474796509082740*c27 + 537300364273168581743616*c3 + 179100121424389527248208*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541368*c0 + 1611901092819505476796416*c1 + 59700040474796509082736*c27 + 537300364273168581743616*c3 + 179100121424389527248216*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541368*c0 + 1611901092819505476796416*c1 + 59700040474796509082736*c27 + 537300364273168581743616*c3 + 179100121424389527248216*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541370*c0 + 1611901092819505476796416*c1 + 59700040474796509082742*c27 + 537300364273168581743616*c3 + 179100121424389527248208*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541368*c0 + 1611901092819505476796416*c1 + 59700040474796509082736*c27 + 537300364273168581743616*c3 + 179100121424389527248216*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541368*c0 + 1611901092819505476796416*c1 + 59700040474796509082736*c27 + 537300364273168581743616*c3 + 179100121424389527248216*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541370*c0 + 1611901092819505476796416*c1 + 59700040474796509082742*c27 + 537300364273168581743616*c3 + 179100121424389527248208*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541368*c0 + 1611901092819505476796416*c1 + 59700040474796509082736*c27 + 537300364273168581743616*c3 + 179100121424389527248216*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541368*c0 + 1611901092819505476796416*c1 + 59700040474796509082736*c27 + 537300364273168581743616*c3 + 179100121424389527248216*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398254541312*c0 + 1611901092819505476796416*c1 + 59700040474796509082624*c27 + 537300364273168581744128*c3 + 179100121424389527247872*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9], [29850020237398249570304*c0 + 1611901092819505611014144*c1 + 59700040474796499140608*c27 + 537300364273168492265472*c3 + 179100121424389497421824*c9]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c13, c14, c16, c17, c19, c20, c22, c23, c25, c26, c28, c29, c31, c32, c34, c35, c37, c38, c40, c41, c43, c44, c46, c47, c49, c50, c52, c53, c55, c56, c58, c59, c61, c62, c64, c65, c67, c68, c70, c71, c73, c74, c76, c77, c79, c80], index=1), c3: KeySymbol(members=[c3, c6, c12, c15, c21, c24, c30, c33, c39, c42, c48, c51, c57, c60, c66, c69, c75, c78], index=3), c9: KeySymbol(members=[c9, c18, c36, c45, c63, c72], index=9), c27: KeySymbol(members=[c27, c54], index=27)} len: 5
## Ignore div=81 for now. Key symbols count 5.

##### div: 82
# v_div:  Matrix([[58971991200713618278352], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278352], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350], [58971991200713618278350]])
# v_div_diff:  Matrix([[0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1]])
# r = M * v_div:  Matrix([[117943982401427236556704*c0 + 4717759296057089462268000*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556704*c0 + 4717759296057089462268000*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1], [117943982401427236556700*c0 + 4717759296057089462268004*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c41], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 2 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 82 => c0 = 58971991200713618278352, c1 = 58971991200713618278350

##### div: 83
# v_div:  Matrix([[116522970565265462622284], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282], [116522970565265462622282]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[116522970565265462622284*c0 + 9554883586351767935027124*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1], [116522970565265462622282*c0 + 9554883586351767935027126*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 83 => c0 = 116522970565265462622284, c1 = 116522970565265462622282

##### div: 84
# v_div:  Matrix([[230271584688500801573744], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986760], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986760], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420], [230271584688500801573744], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986760], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986760], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420], [230271584688500801573744], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986760], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986760], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420], [230271584688500801573744], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986760], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986760], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420], [230271584688500801573400], [230271584688500791986420], [230271584688500791986420]])
# v_div_diff:  Matrix([[0], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38347936*c0 - 230087520*c1 + 230087520*c3 - 38347936*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38347936*c0 - 230087520*c1 + 230087520*c3 - 38347936*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [0], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38347936*c0 - 230087520*c1 + 230087520*c3 - 38347936*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38347936*c0 - 230087520*c1 + 230087520*c3 - 38347936*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [0], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38347936*c0 - 230087520*c1 + 230087520*c3 - 38347936*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38347936*c0 - 230087520*c1 + 230087520*c3 - 38347936*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [0], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38347936*c0 - 230087520*c1 + 230087520*c3 - 38347936*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38347936*c0 - 230087520*c1 + 230087520*c3 - 38347936*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [1376*c0 - 2720*c1 - 1376*c3 + 2720*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7], [38349296*c0 - 230090256*c1 + 230086160*c3 - 38345200*c7]])
# r = M * v_div:  Matrix([[921086338754003206294976*c0 + 11053036065048038015348160*c1 + 5526518032524019237761600*c3 + 1842172677508006335894080*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167947040*c0 + 11053036065048038245435680*c1 + 5526518032524019007674080*c3 + 1842172677508006374242016*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167947040*c0 + 11053036065048038245435680*c1 + 5526518032524019007674080*c3 + 1842172677508006374242016*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206294976*c0 + 11053036065048038015348160*c1 + 5526518032524019237761600*c3 + 1842172677508006335894080*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167947040*c0 + 11053036065048038245435680*c1 + 5526518032524019007674080*c3 + 1842172677508006374242016*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167947040*c0 + 11053036065048038245435680*c1 + 5526518032524019007674080*c3 + 1842172677508006374242016*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206294976*c0 + 11053036065048038015348160*c1 + 5526518032524019237761600*c3 + 1842172677508006335894080*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167947040*c0 + 11053036065048038245435680*c1 + 5526518032524019007674080*c3 + 1842172677508006374242016*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167947040*c0 + 11053036065048038245435680*c1 + 5526518032524019007674080*c3 + 1842172677508006374242016*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206294976*c0 + 11053036065048038015348160*c1 + 5526518032524019237761600*c3 + 1842172677508006335894080*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167947040*c0 + 11053036065048038245435680*c1 + 5526518032524019007674080*c3 + 1842172677508006374242016*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167947040*c0 + 11053036065048038245435680*c1 + 5526518032524019007674080*c3 + 1842172677508006374242016*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003206293600*c0 + 11053036065048038015350880*c1 + 5526518032524019237762976*c3 + 1842172677508006335891360*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7], [921086338754003167945680*c0 + 11053036065048038245438416*c1 + 5526518032524019007675440*c3 + 1842172677508006374239280*c7]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c21, c42, c63], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c8, c10, c11, c13, c16, c17, c19, c20, c22, c23, c25, c26, c29, c31, c32, c34, c37, c38, c40, c41, c43, c44, c46, c47, c50, c52, c53, c55, c58, c59, c61, c62, c64, c65, c67, c68, c71, c73, c74, c76, c79, c80, c82, c83], index=1), c3: KeySymbol(members=[c3, c6, c9, c12, c15, c18, c24, c27, c30, c33, c36, c39, c45, c48, c51, c54, c57, c60, c66, c69, c72, c75, c78, c81], index=3), c7: KeySymbol(members=[c7, c14, c28, c35, c49, c56, c70, c77], index=7)} len: 4
## Ignore div=84 for now. Key symbols count 4.

##### div: 85
# v_div:  Matrix([[455125014443154512836736], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512836728], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512836728], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512836728], [455125014443154512829018], [455125014443154512829024], [455125014443154512829018], [455125014443154512829018], [455125014443154512836728], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512836728], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512836728], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512829024], [455125014443154512836728], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512836728], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512836728], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512836728], [455125014443154512829024], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512836728], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512836728], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512836728], [455125014443154512829018], [455125014443154512829018], [455125014443154512829024], [455125014443154512829018], [455125014443154512836728], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512836728], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512836728], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018], [455125014443154512829018]])
# v_div_diff:  Matrix([[0], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7712*c0 - 123360*c1 - 7712*c17 + 123360*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7712*c0 - 123360*c1 - 7712*c17 + 123360*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7712*c0 - 123360*c1 - 7712*c17 + 123360*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7712*c0 - 123360*c1 - 7712*c17 + 123360*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [8*c0 - 24*c1 + 24*c17 - 8*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5], [7718*c0 - 123386*c1 - 7686*c17 + 123354*c5]])
# r = M * v_div:  Matrix([[455125014443154512836736*c0 + 29128000924361888821057152*c1 + 1820500057772618051316096*c17 + 7282000231090472205387648*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829024*c0 + 29128000924361888821180512*c1 + 1820500057772618051323808*c17 + 7282000231090472205264288*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829024*c0 + 29128000924361888821180512*c1 + 1820500057772618051323808*c17 + 7282000231090472205264288*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829024*c0 + 29128000924361888821180512*c1 + 1820500057772618051323808*c17 + 7282000231090472205264288*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829024*c0 + 29128000924361888821180512*c1 + 1820500057772618051323808*c17 + 7282000231090472205264288*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512836728*c0 + 29128000924361888821057176*c1 + 1820500057772618051316072*c17 + 7282000231090472205387656*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5], [455125014443154512829018*c0 + 29128000924361888821180538*c1 + 1820500057772618051323782*c17 + 7282000231090472205264294*c5]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c6, c7, c8, c9, c11, c12, c13, c14, c16, c18, c19, c21, c22, c23, c24, c26, c27, c28, c29, c31, c32, c33, c36, c37, c38, c39, c41, c42, c43, c44, c46, c47, c48, c49, c52, c53, c54, c56, c57, c58, c59, c61, c62, c63, c64, c66, c67, c69, c71, c72, c73, c74, c76, c77, c78, c79, c81, c82, c83, c84], index=1), c5: KeySymbol(members=[c5, c10, c15, c20, c25, c30, c35, c40, c45, c50, c55, c60, c65, c70, c75, c80], index=5), c17: KeySymbol(members=[c17, c34, c51, c68], index=17)} len: 4
## Ignore div=85 for now. Key symbols count 4.

##### div: 86
# v_div:  Matrix([[899665726224840316060412], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060412], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410], [899665726224840316060410]])
# v_div_diff:  Matrix([[0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1]])
# r = M * v_div:  Matrix([[1799331452449680632120824*c0 + 75571921002886586549074440*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120824*c0 + 75571921002886586549074440*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1], [1799331452449680632120820*c0 + 75571921002886586549074444*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c43], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82, c83, c84, c85], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 2 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 86 => c0 = 899665726224840316060412, c1 = 899665726224840316060410

##### div: 87
# v_div:  Matrix([[1778649481731868223403824], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891032], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891032], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030], [1778649481731868223403820], [1778649481731868204891030], [1778649481731868204891030]])
# v_div_diff:  Matrix([[0], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512792*c0 - 518358120*c1 - 18512792*c29 + 518358120*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512792*c0 - 518358120*c1 - 18512792*c29 + 518358120*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [4*c0 - 4*c1 + 4*c29 - 4*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3], [18512794*c0 - 518358126*c1 - 18512786*c29 + 518358118*c3]])
# r = M * v_div:  Matrix([[1778649481731868223403824*c0 + 99604370976984619473897680*c1 + 3557298963463736409782064*c29 + 49802185488492310255306960*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891032*c0 + 99604370976984619992255800*c1 + 3557298963463736428294856*c29 + 49802185488492309736948840*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891032*c0 + 99604370976984619992255800*c1 + 3557298963463736428294856*c29 + 49802185488492309736948840*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868223403820*c0 + 99604370976984619473897684*c1 + 3557298963463736409782060*c29 + 49802185488492310255306964*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3], [1778649481731868204891030*c0 + 99604370976984619992255806*c1 + 3557298963463736428294850*c29 + 49802185488492309736948842*c3]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c13, c14, c16, c17, c19, c20, c22, c23, c25, c26, c28, c31, c32, c34, c35, c37, c38, c40, c41, c43, c44, c46, c47, c49, c50, c52, c53, c55, c56, c59, c61, c62, c64, c65, c67, c68, c70, c71, c73, c74, c76, c77, c79, c80, c82, c83, c85, c86], index=1), c3: KeySymbol(members=[c3, c6, c9, c12, c15, c18, c21, c24, c27, c30, c33, c36, c39, c42, c45, c48, c51, c54, c57, c60, c63, c66, c69, c72, c75, c78, c81, c84], index=3), c29: KeySymbol(members=[c29, c58], index=29)} len: 4
## Ignore div=87 for now. Key symbols count 4.

##### div: 88
# v_div:  Matrix([[3516875111606193962781632], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781632], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781632], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781632], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781632], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781632], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781632], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781632], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600], [3516875111606193962781600]])
# v_div_diff:  Matrix([[0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [0], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1], [256*c0 - 256*c1]])
# r = M * v_div:  Matrix([[28135000892849551702253056*c0 + 281350008928495517022528000*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702253056*c0 + 281350008928495517022528000*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702253056*c0 + 281350008928495517022528000*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702253056*c0 + 281350008928495517022528000*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702253056*c0 + 281350008928495517022528000*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702253056*c0 + 281350008928495517022528000*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702253056*c0 + 281350008928495517022528000*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702253056*c0 + 281350008928495517022528000*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1], [28135000892849551702252800*c0 + 281350008928495517022528256*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c11, c22, c33, c44, c55, c66, c77], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c78, c79, c80, c81, c82, c83, c84, c85, c86, c87], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [256], [256], [256], [256], [256], [256], [256], [256], [256], [256], [0], [256], [256], [256], [256], [256], [256], [256], [256], [256], [256], [0], [256], [256], [256], [256], [256], [256], [256], [256], [256], [256], [0], [256], [256], [256], [256], [256], [256], [256], [256], [256], [256], [0], [256], [256], [256], [256], [256], [256], [256], [256], [256], [256], [0], [256], [256], [256], [256], [256], [256], [256], [256], [256], [256], [0], [256], [256], [256], [256], [256], [256], [256], [256], [256], [256], [0], [256], [256], [256], [256], [256], [256], [256], [256], [256], [256]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 8 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 32 # difference c_0 - c_i as n = d
k: 256 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 88 => c0 = 3516875111606193962781632, c1 = 3516875111606193962781600

##### div: 89
# v_div:  Matrix([[6954719321827979072466992], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990], [6954719321827979072466990]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[6954719321827979072466992*c0 + 612015300320862158377095120*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1], [6954719321827979072466990*c0 + 612015300320862158377095122*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82, c83, c84, c85, c86, c87, c88], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 89 => c0 = 6954719321827979072466992, c1 = 6954719321827979072466990

##### div: 90
# v_div:  Matrix([[13754889325393114189418480], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189403806], [13754889325393114153612448], [13754889325393114153627008], [13754889325393114189403806], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189403908], [13754889325393114153627008], [13754889325393114153612448], [13754889325393114189403806], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189418376], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189403908], [13754889325393114153612448], [13754889325393114153627008], [13754889325393114189403806], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189403806], [13754889325393114153627008], [13754889325393114153612448], [13754889325393114189403908], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189418376], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189403806], [13754889325393114153612448], [13754889325393114153627008], [13754889325393114189403908], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189403806], [13754889325393114153627008], [13754889325393114153612448], [13754889325393114189403806], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189418480], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189403806], [13754889325393114153612448], [13754889325393114153627008], [13754889325393114189403806], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189403908], [13754889325393114153627008], [13754889325393114153612448], [13754889325393114189403806], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189418376], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189403908], [13754889325393114153612448], [13754889325393114153627008], [13754889325393114189403806], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189403806], [13754889325393114153627008], [13754889325393114153612448], [13754889325393114189403908], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189418376], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189403806], [13754889325393114153612448], [13754889325393114153627008], [13754889325393114189403908], [13754889325393114153612448], [13754889325393114153612448], [13754889325393114189403806], [13754889325393114153627008], [13754889325393114153612448], [13754889325393114189403806], [13754889325393114153612448], [13754889325393114153612448]])
# v_div_diff:  Matrix([[0], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71582944*c0 - 858993408*c1 + 143165472*c15 + 572661728*c3 - 214748416*c5 + 286331680*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29144*c0 - 174720*c1 + 58280*c15 - 58280*c3 + 174720*c5 - 29144*c9], [71582944*c0 - 858993408*c1 + 143165472*c15 + 572661728*c3 - 214748416*c5 + 286331680*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [208*c0 - 208*c15 - 816*c3 + 816*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29144*c0 - 174720*c1 + 58280*c15 - 58280*c3 + 174720*c5 - 29144*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71582944*c0 - 858993408*c1 + 143165472*c15 + 572661728*c3 - 214748416*c5 + 286331680*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71582944*c0 - 858993408*c1 + 143165472*c15 + 572661728*c3 - 214748416*c5 + 286331680*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29144*c0 - 174720*c1 + 58280*c15 - 58280*c3 + 174720*c5 - 29144*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [208*c0 - 208*c15 - 816*c3 + 816*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71582944*c0 - 858993408*c1 + 143165472*c15 + 572661728*c3 - 214748416*c5 + 286331680*c9], [29144*c0 - 174720*c1 + 58280*c15 - 58280*c3 + 174720*c5 - 29144*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71582944*c0 - 858993408*c1 + 143165472*c15 + 572661728*c3 - 214748416*c5 + 286331680*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [0], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71582944*c0 - 858993408*c1 + 143165472*c15 + 572661728*c3 - 214748416*c5 + 286331680*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29144*c0 - 174720*c1 + 58280*c15 - 58280*c3 + 174720*c5 - 29144*c9], [71582944*c0 - 858993408*c1 + 143165472*c15 + 572661728*c3 - 214748416*c5 + 286331680*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [208*c0 - 208*c15 - 816*c3 + 816*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29144*c0 - 174720*c1 + 58280*c15 - 58280*c3 + 174720*c5 - 29144*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71582944*c0 - 858993408*c1 + 143165472*c15 + 572661728*c3 - 214748416*c5 + 286331680*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71582944*c0 - 858993408*c1 + 143165472*c15 + 572661728*c3 - 214748416*c5 + 286331680*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29144*c0 - 174720*c1 + 58280*c15 - 58280*c3 + 174720*c5 - 29144*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [208*c0 - 208*c15 - 816*c3 + 816*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71582944*c0 - 858993408*c1 + 143165472*c15 + 572661728*c3 - 214748416*c5 + 286331680*c9], [29144*c0 - 174720*c1 + 58280*c15 - 58280*c3 + 174720*c5 - 29144*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71582944*c0 - 858993408*c1 + 143165472*c15 + 572661728*c3 - 214748416*c5 + 286331680*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [29348*c0 - 174720*c1 + 58076*c15 - 59100*c3 + 174720*c5 - 28324*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9], [71612064*c0 - 859168192*c1 + 143223712*c15 + 572603488*c3 - 214573632*c5 + 286302560*c9]])
# r = M * v_div:  Matrix([[27509778650786228378836960*c0 + 660234687618869479373397504*c1 + 55019557301572456757673504*c15 + 220078229206289827030460896*c3 + 165058671904717369843524096*c5 + 110039114603144913515231264*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307254016*c0 + 660234687618869480232390912*c1 + 55019557301572456614508032*c15 + 220078229206289826457799168*c3 + 165058671904717370058272512*c5 + 110039114603144913228899584*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807816*c0 + 660234687618869479373572224*c1 + 55019557301572456757615224*c15 + 220078229206289827030519176*c3 + 165058671904717369843349376*c5 + 110039114603144913515260408*c9], [27509778650786228307254016*c0 + 660234687618869480232390912*c1 + 55019557301572456614508032*c15 + 220078229206289826457799168*c3 + 165058671904717370058272512*c5 + 110039114603144913228899584*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378836752*c0 + 660234687618869479373397504*c1 + 55019557301572456757673712*c15 + 220078229206289827030461712*c3 + 165058671904717369843524096*c5 + 110039114603144913515230448*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807816*c0 + 660234687618869479373572224*c1 + 55019557301572456757615224*c15 + 220078229206289827030519176*c3 + 165058671904717369843349376*c5 + 110039114603144913515260408*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307254016*c0 + 660234687618869480232390912*c1 + 55019557301572456614508032*c15 + 220078229206289826457799168*c3 + 165058671904717370058272512*c5 + 110039114603144913228899584*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307254016*c0 + 660234687618869480232390912*c1 + 55019557301572456614508032*c15 + 220078229206289826457799168*c3 + 165058671904717370058272512*c5 + 110039114603144913228899584*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807816*c0 + 660234687618869479373572224*c1 + 55019557301572456757615224*c15 + 220078229206289827030519176*c3 + 165058671904717369843349376*c5 + 110039114603144913515260408*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378836752*c0 + 660234687618869479373397504*c1 + 55019557301572456757673712*c15 + 220078229206289827030461712*c3 + 165058671904717369843524096*c5 + 110039114603144913515230448*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307254016*c0 + 660234687618869480232390912*c1 + 55019557301572456614508032*c15 + 220078229206289826457799168*c3 + 165058671904717370058272512*c5 + 110039114603144913228899584*c9], [27509778650786228378807816*c0 + 660234687618869479373572224*c1 + 55019557301572456757615224*c15 + 220078229206289827030519176*c3 + 165058671904717369843349376*c5 + 110039114603144913515260408*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307254016*c0 + 660234687618869480232390912*c1 + 55019557301572456614508032*c15 + 220078229206289826457799168*c3 + 165058671904717370058272512*c5 + 110039114603144913228899584*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378836960*c0 + 660234687618869479373397504*c1 + 55019557301572456757673504*c15 + 220078229206289827030460896*c3 + 165058671904717369843524096*c5 + 110039114603144913515231264*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307254016*c0 + 660234687618869480232390912*c1 + 55019557301572456614508032*c15 + 220078229206289826457799168*c3 + 165058671904717370058272512*c5 + 110039114603144913228899584*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807816*c0 + 660234687618869479373572224*c1 + 55019557301572456757615224*c15 + 220078229206289827030519176*c3 + 165058671904717369843349376*c5 + 110039114603144913515260408*c9], [27509778650786228307254016*c0 + 660234687618869480232390912*c1 + 55019557301572456614508032*c15 + 220078229206289826457799168*c3 + 165058671904717370058272512*c5 + 110039114603144913228899584*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378836752*c0 + 660234687618869479373397504*c1 + 55019557301572456757673712*c15 + 220078229206289827030461712*c3 + 165058671904717369843524096*c5 + 110039114603144913515230448*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807816*c0 + 660234687618869479373572224*c1 + 55019557301572456757615224*c15 + 220078229206289827030519176*c3 + 165058671904717369843349376*c5 + 110039114603144913515260408*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307254016*c0 + 660234687618869480232390912*c1 + 55019557301572456614508032*c15 + 220078229206289826457799168*c3 + 165058671904717370058272512*c5 + 110039114603144913228899584*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307254016*c0 + 660234687618869480232390912*c1 + 55019557301572456614508032*c15 + 220078229206289826457799168*c3 + 165058671904717370058272512*c5 + 110039114603144913228899584*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807816*c0 + 660234687618869479373572224*c1 + 55019557301572456757615224*c15 + 220078229206289827030519176*c3 + 165058671904717369843349376*c5 + 110039114603144913515260408*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378836752*c0 + 660234687618869479373397504*c1 + 55019557301572456757673712*c15 + 220078229206289827030461712*c3 + 165058671904717369843524096*c5 + 110039114603144913515230448*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307254016*c0 + 660234687618869480232390912*c1 + 55019557301572456614508032*c15 + 220078229206289826457799168*c3 + 165058671904717370058272512*c5 + 110039114603144913228899584*c9], [27509778650786228378807816*c0 + 660234687618869479373572224*c1 + 55019557301572456757615224*c15 + 220078229206289827030519176*c3 + 165058671904717369843349376*c5 + 110039114603144913515260408*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307254016*c0 + 660234687618869480232390912*c1 + 55019557301572456614508032*c15 + 220078229206289826457799168*c3 + 165058671904717370058272512*c5 + 110039114603144913228899584*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228378807612*c0 + 660234687618869479373572224*c1 + 55019557301572456757615428*c15 + 220078229206289827030519996*c3 + 165058671904717369843349376*c5 + 110039114603144913515259588*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9], [27509778650786228307224896*c0 + 660234687618869480232565696*c1 + 55019557301572456614449792*c15 + 220078229206289826457857408*c3 + 165058671904717370058097728*c5 + 110039114603144913228928704*c9]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c45], index=0), c1: KeySymbol(members=[c1, c2, c4, c7, c8, c11, c13, c14, c16, c17, c19, c22, c23, c26, c28, c29, c31, c32, c34, c37, c38, c41, c43, c44, c46, c47, c49, c52, c53, c56, c58, c59, c61, c62, c64, c67, c68, c71, c73, c74, c76, c77, c79, c82, c83, c86, c88, c89], index=1), c3: KeySymbol(members=[c3, c6, c12, c21, c24, c33, c39, c42, c48, c51, c57, c66, c69, c78, c84, c87], index=3), c5: KeySymbol(members=[c5, c10, c20, c25, c35, c40, c50, c55, c65, c70, c80, c85], index=5), c9: KeySymbol(members=[c9, c18, c27, c36, c54, c63, c72, c81], index=9), c15: KeySymbol(members=[c15, c30, c60, c75], index=15)} len: 6
## Ignore div=90 for now. Key symbols count 6.

##### div: 91
# v_div:  Matrix([[27207473390887478569212080], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569212060], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211448], [27207473390887478569212060], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569212060], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211448], [27207473390887478569211430], [27207473390887478569212060], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569212060], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211448], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569212060], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569212060], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211448], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569212060], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569212060], [27207473390887478569211430], [27207473390887478569211448], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569212060], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569212060], [27207473390887478569211448], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569212060], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430], [27207473390887478569211430]])
# v_div_diff:  Matrix([[0], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [20*c0 - 108*c1 + 108*c13 - 20*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [632*c0 - 7560*c1 - 632*c13 + 7560*c7], [20*c0 - 108*c1 + 108*c13 - 20*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [20*c0 - 108*c1 + 108*c13 - 20*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [632*c0 - 7560*c1 - 632*c13 + 7560*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [20*c0 - 108*c1 + 108*c13 - 20*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [20*c0 - 108*c1 + 108*c13 - 20*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [632*c0 - 7560*c1 - 632*c13 + 7560*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [20*c0 - 108*c1 + 108*c13 - 20*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [20*c0 - 108*c1 + 108*c13 - 20*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [632*c0 - 7560*c1 - 632*c13 + 7560*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [20*c0 - 108*c1 + 108*c13 - 20*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [20*c0 - 108*c1 + 108*c13 - 20*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [632*c0 - 7560*c1 - 632*c13 + 7560*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [20*c0 - 108*c1 + 108*c13 - 20*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [20*c0 - 108*c1 + 108*c13 - 20*c7], [632*c0 - 7560*c1 - 632*c13 + 7560*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [20*c0 - 108*c1 + 108*c13 - 20*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7], [650*c0 - 7670*c1 - 522*c13 + 7542*c7]])
# r = M * v_div:  Matrix([[27207473390887478569212080*c0 + 1958938084143898456983222960*c1 + 163244840345324871415268688*c13 + 326489680690649742830544720*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569212060*c0 + 1958938084143898456983223068*c1 + 163244840345324871415268580*c13 + 326489680690649742830544740*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211448*c0 + 1958938084143898456983230520*c1 + 163244840345324871415269320*c13 + 326489680690649742830537160*c7], [27207473390887478569212060*c0 + 1958938084143898456983223068*c1 + 163244840345324871415268580*c13 + 326489680690649742830544740*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569212060*c0 + 1958938084143898456983223068*c1 + 163244840345324871415268580*c13 + 326489680690649742830544740*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211448*c0 + 1958938084143898456983230520*c1 + 163244840345324871415269320*c13 + 326489680690649742830537160*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569212060*c0 + 1958938084143898456983223068*c1 + 163244840345324871415268580*c13 + 326489680690649742830544740*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569212060*c0 + 1958938084143898456983223068*c1 + 163244840345324871415268580*c13 + 326489680690649742830544740*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211448*c0 + 1958938084143898456983230520*c1 + 163244840345324871415269320*c13 + 326489680690649742830537160*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569212060*c0 + 1958938084143898456983223068*c1 + 163244840345324871415268580*c13 + 326489680690649742830544740*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569212060*c0 + 1958938084143898456983223068*c1 + 163244840345324871415268580*c13 + 326489680690649742830544740*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211448*c0 + 1958938084143898456983230520*c1 + 163244840345324871415269320*c13 + 326489680690649742830537160*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569212060*c0 + 1958938084143898456983223068*c1 + 163244840345324871415268580*c13 + 326489680690649742830544740*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569212060*c0 + 1958938084143898456983223068*c1 + 163244840345324871415268580*c13 + 326489680690649742830544740*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211448*c0 + 1958938084143898456983230520*c1 + 163244840345324871415269320*c13 + 326489680690649742830537160*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569212060*c0 + 1958938084143898456983223068*c1 + 163244840345324871415268580*c13 + 326489680690649742830544740*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569212060*c0 + 1958938084143898456983223068*c1 + 163244840345324871415268580*c13 + 326489680690649742830544740*c7], [27207473390887478569211448*c0 + 1958938084143898456983230520*c1 + 163244840345324871415269320*c13 + 326489680690649742830537160*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569212060*c0 + 1958938084143898456983223068*c1 + 163244840345324871415268580*c13 + 326489680690649742830544740*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7], [27207473390887478569211430*c0 + 1958938084143898456983230630*c1 + 163244840345324871415269210*c13 + 326489680690649742830537178*c7]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c8, c9, c10, c11, c12, c15, c16, c17, c18, c19, c20, c22, c23, c24, c25, c27, c29, c30, c31, c32, c33, c34, c36, c37, c38, c40, c41, c43, c44, c45, c46, c47, c48, c50, c51, c53, c54, c55, c57, c58, c59, c60, c61, c62, c64, c66, c67, c68, c69, c71, c72, c73, c74, c75, c76, c79, c80, c81, c82, c83, c85, c86, c87, c88, c89, c90], index=1), c7: KeySymbol(members=[c7, c14, c21, c28, c35, c42, c49, c56, c63, c70, c77, c84], index=7), c13: KeySymbol(members=[c13, c26, c39, c52, c65, c78], index=13)} len: 4
## Ignore div=91 for now. Key symbols count 4.

##### div: 92
# v_div:  Matrix([[53823479968929577169527144], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527144], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527144], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527144], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140], [53823479968929577169527140]])
# v_div_diff:  Matrix([[0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [0], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1], [16*c0 - 16*c1]])
# r = M * v_div:  Matrix([[215293919875718308678108576*c0 + 4736466237265802790918388320*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108576*c0 + 4736466237265802790918388320*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108576*c0 + 4736466237265802790918388320*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108576*c0 + 4736466237265802790918388320*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1], [215293919875718308678108560*c0 + 4736466237265802790918388336*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c23, c46, c69], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82, c83, c84, c85, c86, c87, c88, c89, c90, c91], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix
# Apply rule of "1 difference with 2 terms" (#2).
i: 4 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 4 # difference c_0 - c_i as n = d
k: 16 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 92 => c0 = 53823479968929577169527144, c1 = 53823479968929577169527140

##### div: 93
# v_div:  Matrix([[106489465744978948424601736], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328068], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328068], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066], [106489465744978948424601732], [106489465744978948355328066], [106489465744978948355328066]])
# v_div_diff:  Matrix([[0], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273668*c0 - 2078209980*c1 + 2078209980*c3 - 69273668*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273668*c0 - 2078209980*c1 + 2078209980*c3 - 69273668*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [4*c0 - 4*c1 - 4*c3 + 4*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31], [69273670*c0 - 2078209986*c1 + 2078209978*c3 - 69273662*c31]])
# r = M * v_div:  Matrix([[106489465744978948424601736*c0 + 6389367944698736901319683960*c1 + 3194683972349368452738051960*c3 + 212978931489957896710656136*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328068*c0 + 6389367944698736903397893940*c1 + 3194683972349368450659841980*c3 + 212978931489957896779929804*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328068*c0 + 6389367944698736903397893940*c1 + 3194683972349368450659841980*c3 + 212978931489957896779929804*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948424601732*c0 + 6389367944698736901319683964*c1 + 3194683972349368452738051964*c3 + 212978931489957896710656132*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31], [106489465744978948355328066*c0 + 6389367944698736903397893946*c1 + 3194683972349368450659841982*c3 + 212978931489957896779929798*c31]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c13, c14, c16, c17, c19, c20, c22, c23, c25, c26, c28, c29, c32, c34, c35, c37, c38, c40, c41, c43, c44, c46, c47, c49, c50, c52, c53, c55, c56, c58, c59, c61, c64, c65, c67, c68, c70, c71, c73, c74, c76, c77, c79, c80, c82, c83, c85, c86, c88, c89, c91, c92], index=1), c3: KeySymbol(members=[c3, c6, c9, c12, c15, c18, c21, c24, c27, c30, c33, c36, c39, c42, c45, c48, c51, c54, c57, c60, c63, c66, c69, c72, c75, c78, c81, c84, c87, c90], index=3), c31: KeySymbol(members=[c31, c62], index=31)} len: 4
## Ignore div=93 for now. Key symbols count 4.

##### div: 94
# v_div:  Matrix([[210713198176234940408361572], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361572], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570], [210713198176234940408361570]])
# v_div_diff:  Matrix([[0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [0], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1], [4*c0 - 4*c1]])
# r = M * v_div:  Matrix([[421426396352469880816723144*c0 + 19385614232213614517569264440*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723144*c0 + 19385614232213614517569264440*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1], [421426396352469880816723140*c0 + 19385614232213614517569264444*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c47], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82, c83, c84, c85, c86, c87, c88, c89, c90, c91, c92, c93], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [0], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4], [4]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 2 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 94 => c0 = 210713198176234940408361572, c1 = 210713198176234940408361570

##### div: 95
# v_div:  Matrix([[416990329022443882071306032], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278436], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278436], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278436], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278436], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071306024], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430], [416990329022443882071278430]])
# v_div_diff:  Matrix([[0], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27596*c0 - 496692*c1 - 27596*c19 + 496692*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27596*c0 - 496692*c1 - 27596*c19 + 496692*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27596*c0 - 496692*c1 - 27596*c19 + 496692*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27596*c0 - 496692*c1 - 27596*c19 + 496692*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [8*c0 - 24*c1 + 24*c19 - 8*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5], [27602*c0 - 496718*c1 - 27570*c19 + 496686*c5]])
# r = M * v_div:  Matrix([[416990329022443882071306032*c0 + 30023303689615959509132046960*c1 + 1667961316089775528285113744*c19 + 7505825922403989877283508432*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278436*c0 + 30023303689615959509132543652*c1 + 1667961316089775528285141340*c19 + 7505825922403989877283011740*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278436*c0 + 30023303689615959509132543652*c1 + 1667961316089775528285141340*c19 + 7505825922403989877283011740*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278436*c0 + 30023303689615959509132543652*c1 + 1667961316089775528285141340*c19 + 7505825922403989877283011740*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278436*c0 + 30023303689615959509132543652*c1 + 1667961316089775528285141340*c19 + 7505825922403989877283011740*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071306024*c0 + 30023303689615959509132046984*c1 + 1667961316089775528285113720*c19 + 7505825922403989877283508440*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5], [416990329022443882071278430*c0 + 30023303689615959509132543678*c1 + 1667961316089775528285141314*c19 + 7505825922403989877283011746*c5]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c6, c7, c8, c9, c11, c12, c13, c14, c16, c17, c18, c21, c22, c23, c24, c26, c27, c28, c29, c31, c32, c33, c34, c36, c37, c39, c41, c42, c43, c44, c46, c47, c48, c49, c51, c52, c53, c54, c56, c58, c59, c61, c62, c63, c64, c66, c67, c68, c69, c71, c72, c73, c74, c77, c78, c79, c81, c82, c83, c84, c86, c87, c88, c89, c91, c92, c93, c94], index=1), c5: KeySymbol(members=[c5, c10, c15, c20, c25, c30, c35, c40, c45, c50, c55, c60, c65, c70, c75, c80, c85, c90], index=5), c19: KeySymbol(members=[c19, c38, c57, c76], index=19)} len: 4
## Ignore div=95 for now. Key symbols count 4.

##### div: 96
# v_div:  Matrix([[825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240], [825293359523586850022227968], [825293359523586849888010240], [825293359523586849888010240]])
# v_div_diff:  Matrix([[0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1], [0], [4294967296*c0 - 4294967296*c1], [4294967296*c0 - 4294967296*c1]])
# r = M * v_div:  Matrix([[26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779200711294976*c0 + 52818775009509558392832655360*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1], [26409387504754779196416327680*c0 + 52818775009509558397127622656*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c3, c6, c9, c12, c15, c18, c21, c24, c27, c30, c33, c36, c39, c42, c45, c48, c51, c54, c57, c60, c63, c66, c69, c72, c75, c78, c81, c84, c87, c90, c93], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c11, c13, c14, c16, c17, c19, c20, c22, c23, c25, c26, c28, c29, c31, c32, c34, c35, c37, c38, c40, c41, c43, c44, c46, c47, c49, c50, c52, c53, c55, c56, c58, c59, c61, c62, c64, c65, c67, c68, c70, c71, c73, c74, c76, c77, c79, c80, c82, c83, c85, c86, c88, c89, c91, c92, c94, c95], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix
# Apply rule of "1 difference with 2 terms" (#2).
i: 32 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 134217728 # difference c_0 - c_i as n = d
k: 4294967296 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 96 => c0 = 825293359523586850022227968, c1 = 825293359523586849888010240

##### div: 97
# v_div:  Matrix([[1633570361118852321516370112], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110], [1633570361118852321516370110]])
# v_div_diff:  Matrix([[0], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1], [2*c0 - 2*c1]])
# r = M * v_div:  Matrix([[1633570361118852321516370112*c0 + 156822754667409822865571530560*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1], [1633570361118852321516370110*c0 + 156822754667409822865571530562*c1]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82, c83, c84, c85, c86, c87, c88, c89, c90, c91, c92, c93, c94, c95, c96], index=1)} len: 2
Difference with 2 terms: {c1, c0}  Difference: c0 - c1
v_div_diff / (c0 - c1): Matrix([[0], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2], [2]])
# Apply rule of "1 difference with 2 terms" (#2).
i: 1 # occurences of c_0 = mu_0; occurences of c_1 = mu_1
j: 2 # difference c_0 - c_i as n = d
k: 2 # factor of difference from previous step to current step
# Formula for c0: (2**n + (mu_1 * j * k**((n//d)-1)))// d
# Formula for c1:  (2**n - (i * j * k**((n//d)-1))// d
# n = 97 => c0 = 1633570361118852321516370112, c1 = 1633570361118852321516370110

##### div: 98
# v_div:  Matrix([[3233802551602626024226284692], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226284690], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226284690], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226284690], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226284690], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226284690], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226284690], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226284692], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226284690], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226284690], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226284690], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226284690], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226284690], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226284690], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520], [3233802551602626024226283520]])
# v_div_diff:  Matrix([[0], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [4*c0 - 4*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [4*c0 - 4*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [4*c0 - 4*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [4*c0 - 4*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [4*c0 - 4*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [4*c0 - 4*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [0], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [4*c0 - 4*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [4*c0 - 4*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [4*c0 - 4*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [4*c0 - 4*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [4*c0 - 4*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [4*c0 - 4*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7], [2344*c0 - 16384*c1 + 14040*c7]])
# r = M * v_div:  Matrix([[6467605103205252048452569384*c0 + 271639414334620586035007815680*c1 + 38805630619231512290715416280*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452569380*c0 + 271639414334620586035007815680*c1 + 38805630619231512290715416284*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452569380*c0 + 271639414334620586035007815680*c1 + 38805630619231512290715416284*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452569380*c0 + 271639414334620586035007815680*c1 + 38805630619231512290715416284*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452569380*c0 + 271639414334620586035007815680*c1 + 38805630619231512290715416284*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452569380*c0 + 271639414334620586035007815680*c1 + 38805630619231512290715416284*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452569380*c0 + 271639414334620586035007815680*c1 + 38805630619231512290715416284*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452569384*c0 + 271639414334620586035007815680*c1 + 38805630619231512290715416280*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452569380*c0 + 271639414334620586035007815680*c1 + 38805630619231512290715416284*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452569380*c0 + 271639414334620586035007815680*c1 + 38805630619231512290715416284*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452569380*c0 + 271639414334620586035007815680*c1 + 38805630619231512290715416284*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452569380*c0 + 271639414334620586035007815680*c1 + 38805630619231512290715416284*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452569380*c0 + 271639414334620586035007815680*c1 + 38805630619231512290715416284*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452569380*c0 + 271639414334620586035007815680*c1 + 38805630619231512290715416284*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7], [6467605103205252048452567040*c0 + 271639414334620586035007832064*c1 + 38805630619231512290715402240*c7]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c49], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c5, c6, c8, c9, c10, c11, c12, c13, c15, c16, c17, c18, c19, c20, c22, c23, c24, c25, c26, c27, c29, c30, c31, c32, c33, c34, c36, c37, c38, c39, c40, c41, c43, c44, c45, c46, c47, c48, c50, c51, c52, c53, c54, c55, c57, c58, c59, c60, c61, c62, c64, c65, c66, c67, c68, c69, c71, c72, c73, c74, c75, c76, c78, c79, c80, c81, c82, c83, c85, c86, c87, c88, c89, c90, c92, c93, c94, c95, c96, c97], index=1), c7: KeySymbol(members=[c7, c14, c21, c28, c35, c42, c56, c63, c70, c77, c84, c91], index=7)} len: 3
Difference with 2 terms: {c0, c7}  Difference: c0 - c7
v_div_diff / (c0 - c7): Matrix([[0], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [4], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [4], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [4], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [4], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [4], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [4], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [0], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [4], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [4], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [4], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [4], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [4], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [4], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)], [(2344*c0 - 16384*c1 + 14040*c7)/(c0 - c7)]])
i: 2 # occurences of c_0 = mu_0
j: 2 # difference c_0 - c_i as n = d
k: 4 # factor of difference from previous step to current step
mu_1: 12 # occurences of c7
mu_2: 84 # occurences of c1
o (coefficient c0): 2344
p (coefficient c7): 14040
q (coefficient c1): -16384
diff_0 (c0-c1 as n = d): 1172
# Apply rule of "1 difference with 2 terms and a third term with this difference and a third variable" (#3).
difference c0 - c of row_index_of_second_symbol_in_diff:
# f3_1(n, d): j * k**((n//d)-1)
difference c0 - c of row_index_with_3_symbols: 
# f3_2(n, d): m >= 1: j * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * (s from 0 to (m-2) Sum of ((2**(log_2(p) - log_2(k))**s)
  => diff_0 * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * ((2**(log_2(-q) - log_2(k))**s) - 1) // (2**(log_2(-q) - log_2(k)) - 1)
# Formula for c0: (2**n + mu_1 *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c7: (2**n + (mu_1 - d) *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c1: (2**n + mu_1 * f3_1(n, d) + (mu_2 - d) * f3_2(n, d))// d
# n = 98 => c0 = 3233802551602626024226284692, c7 = 3233802551602626024226284690, c1 = 3233802551602626024226283520
# n = 98 => c0-c7: 2, c0-c1: 1172
# n = 196 => c0-c7: 8, c0-c1: 19173968
# n = 294 => c0-c7: 32, c0-c1: 314146179392
# n = 392 => c0-c7: 128, c0-c1: 5146971002709248
# n = 490 => c0-c7: 512, c0-c1: 84327972908386522112
(matric calc.) m: 1, c0-c1: 1172, c0-c7: 2
(matric calc.) m: 2, c0-c1: 19173968, c0-c7: 8
(matric calc.) m: 3, c0-c1: 314146179392, c0-c7: 32
(matric calc.) m: 4, c0-c1: 5146971002709248, c0-c7: 128
(matric calc.) m: 5, c0-c1: 84327972908386522112, c0-c7: 512

##### div: 99
# v_div:  Matrix([[6402275758728431320863954440], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954380], [6402275758728431320603653208], [6402275758728431320603653264], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954380], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653264], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954380], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954252], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954380], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653264], [6402275758728431320863954380], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954380], [6402275758728431320603653264], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954380], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954252], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954380], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653264], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954380], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653264], [6402275758728431320603653208], [6402275758728431320863954380], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208], [6402275758728431320863954194], [6402275758728431320603653208], [6402275758728431320603653208]])
# v_div_diff:  Matrix([[0], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [60*c0 - 336*c1 + 336*c11 - 116*c3 + 116*c33 - 60*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301176*c0 - 7809031440*c1 - 780903152*c11 + 5206019720*c3 + 520601976*c33 + 2603011720*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [60*c0 - 336*c1 + 336*c11 - 116*c3 + 116*c33 - 60*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301176*c0 - 7809031440*c1 - 780903152*c11 + 5206019720*c3 + 520601976*c33 + 2603011720*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [60*c0 - 336*c1 + 336*c11 - 116*c3 + 116*c33 - 60*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [188*c0 - 1860*c3 - 188*c33 + 1860*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [60*c0 - 336*c1 + 336*c11 - 116*c3 + 116*c33 - 60*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301176*c0 - 7809031440*c1 - 780903152*c11 + 5206019720*c3 + 520601976*c33 + 2603011720*c9], [60*c0 - 336*c1 + 336*c11 - 116*c3 + 116*c33 - 60*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [60*c0 - 336*c1 + 336*c11 - 116*c3 + 116*c33 - 60*c9], [260301176*c0 - 7809031440*c1 - 780903152*c11 + 5206019720*c3 + 520601976*c33 + 2603011720*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [60*c0 - 336*c1 + 336*c11 - 116*c3 + 116*c33 - 60*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [188*c0 - 1860*c3 - 188*c33 + 1860*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [60*c0 - 336*c1 + 336*c11 - 116*c3 + 116*c33 - 60*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301176*c0 - 7809031440*c1 - 780903152*c11 + 5206019720*c3 + 520601976*c33 + 2603011720*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [60*c0 - 336*c1 + 336*c11 - 116*c3 + 116*c33 - 60*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301176*c0 - 7809031440*c1 - 780903152*c11 + 5206019720*c3 + 520601976*c33 + 2603011720*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [60*c0 - 336*c1 + 336*c11 - 116*c3 + 116*c33 - 60*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [246*c0 - 336*c1 + 336*c11 - 1978*c3 - 70*c33 + 1802*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9], [260301232*c0 - 7809031784*c1 - 780902808*c11 + 5206019608*c3 + 520602088*c33 + 2603011664*c9]])
# r = M * v_div:  Matrix([[6402275758728431320863954440*c0 + 384136545523705879236219192480*c1 + 38413654552370587923621919584*c11 + 128045515174568626417279083880*c3 + 12804551517456862641727908504*c33 + 64022757587284313208639543800*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954380*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279083996*c3 + 12804551517456862641727908388*c33 + 64022757587284313208639543860*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653264*c0 + 384136545523705879244028223920*c1 + 38413654552370587924402822736*c11 + 128045515174568626412073064160*c3 + 12804551517456862641207306528*c33 + 64022757587284313206036532080*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954380*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279083996*c3 + 12804551517456862641727908388*c33 + 64022757587284313208639543860*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653264*c0 + 384136545523705879244028223920*c1 + 38413654552370587924402822736*c11 + 128045515174568626412073064160*c3 + 12804551517456862641207306528*c33 + 64022757587284313206036532080*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954380*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279083996*c3 + 12804551517456862641727908388*c33 + 64022757587284313208639543860*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954252*c0 + 384136545523705879236219192480*c1 + 38413654552370587923621919584*c11 + 128045515174568626417279085740*c3 + 12804551517456862641727908692*c33 + 64022757587284313208639541940*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954380*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279083996*c3 + 12804551517456862641727908388*c33 + 64022757587284313208639543860*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653264*c0 + 384136545523705879244028223920*c1 + 38413654552370587924402822736*c11 + 128045515174568626412073064160*c3 + 12804551517456862641207306528*c33 + 64022757587284313206036532080*c9], [6402275758728431320863954380*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279083996*c3 + 12804551517456862641727908388*c33 + 64022757587284313208639543860*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954380*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279083996*c3 + 12804551517456862641727908388*c33 + 64022757587284313208639543860*c9], [6402275758728431320603653264*c0 + 384136545523705879244028223920*c1 + 38413654552370587924402822736*c11 + 128045515174568626412073064160*c3 + 12804551517456862641207306528*c33 + 64022757587284313206036532080*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954380*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279083996*c3 + 12804551517456862641727908388*c33 + 64022757587284313208639543860*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954252*c0 + 384136545523705879236219192480*c1 + 38413654552370587923621919584*c11 + 128045515174568626417279085740*c3 + 12804551517456862641727908692*c33 + 64022757587284313208639541940*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954380*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279083996*c3 + 12804551517456862641727908388*c33 + 64022757587284313208639543860*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653264*c0 + 384136545523705879244028223920*c1 + 38413654552370587924402822736*c11 + 128045515174568626412073064160*c3 + 12804551517456862641207306528*c33 + 64022757587284313206036532080*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954380*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279083996*c3 + 12804551517456862641727908388*c33 + 64022757587284313208639543860*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653264*c0 + 384136545523705879244028223920*c1 + 38413654552370587924402822736*c11 + 128045515174568626412073064160*c3 + 12804551517456862641207306528*c33 + 64022757587284313206036532080*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954380*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279083996*c3 + 12804551517456862641727908388*c33 + 64022757587284313208639543860*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320863954194*c0 + 384136545523705879236219192816*c1 + 38413654552370587923621919248*c11 + 128045515174568626417279085858*c3 + 12804551517456862641727908574*c33 + 64022757587284313208639541998*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9], [6402275758728431320603653208*c0 + 384136545523705879244028224264*c1 + 38413654552370587924402822392*c11 + 128045515174568626412073064272*c3 + 12804551517456862641207306416*c33 + 64022757587284313206036532136*c9]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0], index=0), c1: KeySymbol(members=[c1, c2, c4, c5, c7, c8, c10, c13, c14, c16, c17, c19, c20, c23, c25, c26, c28, c29, c31, c32, c34, c35, c37, c38, c40, c41, c43, c46, c47, c49, c50, c52, c53, c56, c58, c59, c61, c62, c64, c65, c67, c68, c70, c71, c73, c74, c76, c79, c80, c82, c83, c85, c86, c89, c91, c92, c94, c95, c97, c98], index=1), c3: KeySymbol(members=[c3, c6, c12, c15, c21, c24, c30, c39, c42, c48, c51, c57, c60, c69, c75, c78, c84, c87, c93, c96], index=3), c9: KeySymbol(members=[c9, c18, c27, c36, c45, c54, c63, c72, c81, c90], index=9), c11: KeySymbol(members=[c11, c22, c44, c55, c77, c88], index=11), c33: KeySymbol(members=[c33, c66], index=33)} len: 6
## Ignore div=99 for now. Key symbols count 6.

##### div: 100
# v_div:  Matrix([[12676506002282294014967074000], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967074000], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967074000], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967074000], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967073996], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568], [12676506002282294014967021568]])
# v_div_diff:  Matrix([[0], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [0], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [0], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [0], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [16*c0 - 16*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5], [209728*c0 - 1048576*c1 + 838848*c5]])
# r = M * v_div:  Matrix([[50706024009129176059868296000*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183936*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868296000*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183936*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868296000*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183936*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868296000*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183936*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868295984*c0 + 1014120480182583521197361725440*c1 + 202824096036516704239473183952*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5], [50706024009129176059868086272*c0 + 1014120480182583521197362774016*c1 + 202824096036516704239472345088*c5]])
## SymbolTable.key_symbols:  {c0: KeySymbol(members=[c0, c25, c50, c75], index=0), c1: KeySymbol(members=[c1, c2, c3, c4, c6, c7, c8, c9, c11, c12, c13, c14, c16, c17, c18, c19, c21, c22, c23, c24, c26, c27, c28, c29, c31, c32, c33, c34, c36, c37, c38, c39, c41, c42, c43, c44, c46, c47, c48, c49, c51, c52, c53, c54, c56, c57, c58, c59, c61, c62, c63, c64, c66, c67, c68, c69, c71, c72, c73, c74, c76, c77, c78, c79, c81, c82, c83, c84, c86, c87, c88, c89, c91, c92, c93, c94, c96, c97, c98, c99], index=1), c5: KeySymbol(members=[c5, c10, c15, c20, c30, c35, c40, c45, c55, c60, c65, c70, c80, c85, c90, c95], index=5)} len: 3
Difference with 2 terms: {c0, c5}  Difference: c0 - c5
v_div_diff / (c0 - c5): Matrix([[0], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [0], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [0], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [0], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [16], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)], [(209728*c0 - 1048576*c1 + 838848*c5)/(c0 - c5)]])
i: 4 # occurences of c_0 = mu_0
j: 4 # difference c_0 - c_i as n = d
k: 16 # factor of difference from previous step to current step
mu_1: 16 # occurences of c5
mu_2: 80 # occurences of c1
o (coefficient c0): 209728
p (coefficient c5): 838848
q (coefficient c1): -1048576
diff_0 (c0-c1 as n = d): 52432
# Apply rule of "1 difference with 2 terms and a third term with this difference and a third variable" (#3).
difference c0 - c of row_index_of_second_symbol_in_diff:
# f3_1(n, d): j * k**((n//d)-1)
difference c0 - c of row_index_with_3_symbols: 
# f3_2(n, d): m >= 1: j * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * (s from 0 to (m-2) Sum of ((2**(log_2(p) - log_2(k))**s)
  => diff_0 * (-q)**((n//d)-1) - p * j * (k**((n//self.div)-2)) * ((2**(log_2(-q) - log_2(k))**s) - 1) // (2**(log_2(-q) - log_2(k)) - 1)
# Formula for c0: (2**n + mu_1 *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c5: (2**n + (mu_1 - d) *  f3_1(n, d) + mu_2 * f3_2(n, d))// d
# Formula for c1: (2**n + mu_1 * f3_1(n, d) + (mu_2 - d) * f3_2(n, d))// d
# n = 100 => c0 = 12676506002282294014967074000, c5 = 12676506002282294014967073996, c1 = 12676506002282294014967021568
# n = 100 => c0-c5: 4, c0-c1: 52432
# n = 200 => c0-c5: 64, c0-c1: 54975581440
# n = 300 => c0-c5: 1024, c0-c1: 57646075230343168
# n = 400 => c0-c5: 16384, c0-c1: 60446290980731458748416
# n = 500 => c0-c5: 262144, c0-c1: 63382530011411470074835369984
(matric calc.) m: 1, c0-c1: 52432, c0-c5: 4
(matric calc.) m: 2, c0-c1: 54975581440, c0-c5: 64
(matric calc.) m: 3, c0-c1: 57646075230343168, c0-c5: 1024
(matric calc.) m: 4, c0-c1: 60446290980731458748416, c0-c5: 16384
(matric calc.) m: 5, c0-c1: 63382530011411470074835369984, c0-c5: 262144

